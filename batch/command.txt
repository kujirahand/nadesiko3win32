
■plugin_system
●システム定数
| 定数 | ナデシコバージョン | | '?' | なでしこばーじょん |
| 定数 | ナデシコエンジン | | 'nadesi.com/v3' | なでしこえんじん |
| 定数 | ナデシコ種類 | | 'wnako3/cnako3' | なでしこしゅるい |
| 定数 | はい | | 1 | はい |
| 定数 | いいえ | | 0 | いいえ |
| 定数 | 真 | | 1 | しん |
| 定数 | 偽 | | 0 | ぎ |
| 定数 | 永遠 | | 1 | えいえん |
| 定数 | オン | | 1 | おん |
| 定数 | オフ | | 0 | おふ |
| 定数 | 改行 | | '\n' | かいぎょう |
| 定数 | タブ | | '\t' | たぶ |
| 定数 | カッコ | | '「' | かっこ |
| 定数 | カッコ閉 | | '」' | かっことじ |
| 定数 | 波カッコ | | '{' | なみかっこ |
| 定数 | 波カッコ閉 | | ' | なみかっことじ |
| 定数 | OK | | true | OK |
| 定数 | NG | | false | NG |
| 定数 | キャンセル | | 0 | きゃんせる |
| 定数 | PI | | Math.PI | PI |
| 定数 | 空 | | '' | から |
| 定数 | NULL | | null | NULL |
| 定数 | undefined | | undefined | undefined |
| 定数 | 未定義 | | undefined | みていぎ |
| 定数 | エラーメッセージ | | '' | えらーめっせーじ |
| 定数 | 対象 | | '' | たいしょう |
| 定数 | 対象キー | | '' | たいしょうきー |
| 定数 | 回数 | | '' | かいすう |
| 定数 | CR | | '\r' | CR |
| 定数 | LF | | '\n' | LF |
| 関数 | 空配列 |  | 空の配列を返す | からはいれつ |
| 関数 | 空ハッシュ |  | 空のハッシュを返す | からはっしゅ |
| 関数 | 空オブジェクト |  | 空のオブジェクトを返す | からおぶじぇくと |
●標準出力
| 関数 | 表示 | Sを/Sと | Sを表示 | ひょうじ |
| 定数 | 表示ログ | | '' | ひょうじろぐ |
| 関数 | 表示ログクリア |  | 表示ログを空にする | ひょうじろぐくりあ |
| 関数 | 言 | Sを/Sと | Sを表示 | いう |
| 関数 | コンソール表示 | Sを/Sと | Sをコンソール表示する(console.log) | こんそーるひょうじ |
●四則演算
| 関数 | 足 | AにBを/Aと | AとBを足す | たす |
| 関数 | 引 | AからBを | AからBを引く | ひく |
| 関数 | 掛 | AにBを/Aと | AにBを掛ける | かける |
| 関数 | 倍 | AのB | AのB倍を求める | ばい |
| 関数 | 割 | AをBで | AをBで割る | わる |
| 関数 | 割余 | AをBで | AをBで割った余りを求める | わったあまり |
| 関数 | 以上 | AがB | AがB以上か | いじょう |
| 関数 | 以下 | AがB | AがB以下か | いか |
| 関数 | 未満 | AがB | AがB未満か | みまん |
| 関数 | 超 | AがB | AがB超か | ちょう |
| 関数 | 等 | AがBと | AがBと等しいか | ひとしい |
| 関数 | 等無 | AがBと | AがBと等しくないか | ひとしくない |
| 関数 | 一致 | AがBと | AがBと一致するか(配列や辞書も比較可能) | いっち |
| 関数 | 不一致 | AがBと | AがBと不一致か(配列や辞書も比較可能) | ふいっち |
| 関数 | 範囲内 | VがAからBの | VがAからBの範囲内か | はんいない |
| 関数 | 連続加算 | Bを...Aに/...Aと | A1+A2+A3...にBを足す(可変引数) | れんぞくかさん |
●敬語
| 関数 | ください |  | 敬語対応のため | ください |
| 関数 | お願 |  | ソースコードを読む人を気持ちよくする | おねがいします |
| 関数 | です |  | ソースコードを読む人を気持ちよくする | です |
| 関数 | 拝啓 |  | ソースコードを読む人を気持ちよくする | はいけい |
| 関数 | 礼節レベル取得 |  | (お遊び)敬語を何度使ったか返す | おねがいします |
●特殊命令
| 関数 | JS実行 | SRCを/SRCで | JavaScriptのコードSRCを実行する(変数sysでなでしこシステムを参照できる) | JSじっこう |
| 関数 | JSオブジェクト取得 | NAMEの | なでしこで定義した関数や変数nameのJavaScriptオブジェクトを取得する | JSおぶじぇくとしゅとく |
| 関数 | JS関数実行 | NAMEをARGSで | JavaScriptの関数NAMEを引数ARGS(配列)で実行する | JSかんすうしゅとく |
| 関数 | JSメソッド実行 | OBJのMをARGSで | JavaScriptのオブジェクトOBJのメソッドMを引数ARGS(配列)で実行する | JSめそっどじっこう |
| 関数 | ナデシコ | CODEを/CODEで | なでしこのコードCODEを実行する | なでしこする |
| 関数 | ナデシコ続 | CODEを/CODEで | なでしこのコードCODEを実行する | なでしこつづける |
| 関数 | 実行 | Fを/Fに/Fで | 無名関数（あるいは、文字列で関数名を指定）Fを実行する(Fが関数でなければ無視する) | じっこう |
| 関数 | 実行時間計測 | Fの | 関数Fを実行して要した時間をミリ秒で返す | じっこうじかんけいそく |
●型変換
| 関数 | 変数型確認 | Vの | 変数Vの型を返す | へんすうかたかくにん |
| 関数 | TYPEOF | Vの | 変数Vの型を返す | TYPEOF |
| 関数 | 文字列変換 | Vを | 値Vを文字列に変換 | もじれつへんかん |
| 関数 | TOSTR | Vを | 値Vを文字列に変換 | TOSTR |
| 関数 | 整数変換 | Vを | 値Vを整数に変換 | せいすうへんかん |
| 関数 | TOINT | Vを | 値Vを整数に変換 | TOINT |
| 関数 | 実数変換 | Vを | 値Vを実数に変換 | じっすうへんかん |
| 関数 | TOFLOAT | Vを | 値Vを実数に変換 | TOFLOAT |
| 関数 | INT | Vの | 値Vを整数に変換 | INT |
| 関数 | FLOAT | Vの | 値Vを実数に変換 | FLOAT |
| 関数 | NAN判定 | Vを | 値VがNaNかどうかを判定 | NANはんてい |
| 関数 | HEX | Aの | 値Vを16進数に変換 | HEX |
| 関数 | RGB | RとGのBで | HTML用のカラーコードを返すRGB(R,G,B)で各値は0-255 | RGB |
●論理演算
| 関数 | 論理OR | AとBの | (ビット演算で)AとBの論理和を返す(v1非互換)。 | ろんりOR |
| 関数 | 論理AND | AとBの | (ビット演算で)AとBの論理積を返す(v1非互換)。日本語の「AかつB」に相当する | ろんりAND |
| 関数 | 論理NOT | Vの | 値Vが0ならば1、それ以外ならば0を返す(v1非互換) | ろんりNOT |
●ビット演算
| 関数 | OR | AとBの | (ビット演算で)AとBの論理和を返す。 | OR |
| 関数 | AND | AとBの | (ビット演算で)AとBの論理積を返す。日本語の「AかつB」に相当する | AND |
| 関数 | XOR | AとBの | (ビット演算で)AとBの排他的論理和を返す。 | XOR |
| 関数 | NOT | Vの | (ビット演算で)vの各ビットを反転して返す。 | NOT |
| 関数 | SHIFT_L | AをBで | VをAビット左へシフトして返す | SHIFT_L |
| 関数 | SHIFT_R | AをBで | VをAビット右へシフトして返す(符号を維持する) | SHIFT_R |
| 関数 | SHIFT_UR | AをBで | VをAビット右へシフトして返す(符号を維持しない、0で埋める) | SHIFT_UR |
●文字列処理
| 関数 | 文字数 | Vの | 文字列Vの文字数を返す | もじすう |
| 関数 | 何文字目 | SでAが/Sの | 文字列SでAが何文字目にあるか調べて返す | なんもじめ |
| 関数 | CHR | Vの | 文字コードから文字を返す | CHR |
| 関数 | ASC | Vの | 文字列Vの最初の文字の文字コードを返す | ASC |
| 関数 | 文字挿入 | SでIにAを/SのIへ | 文字列SのI文字目に文字列Aを挿入する | もじそうにゅう |
| 関数 | 文字検索 | SでAからBを/Sの | 文字列Sで文字列A文字目からBを検索。見つからなければ0を返す。(類似命令に『何文字目』がある)(v1非互換) | もじけんさく |
| 関数 | 追加 | SでAを/Sに/Sへ | 文字列SにAを追加して返す(v1非互換) | ついか |
| 関数 | 一行追加 | SでAを/Sに/Sへ | 文字列SにAと改行を追加して返す(v1非互換) | いちぎょうついか |
| 関数 | 文字列分解 | Vを/Vの/Vで | 文字列Vを一文字ずつに分解して返す | もじれつぶんかい |
| 関数 | リフレイン | VをCNTで/Vの | 文字列VをCNT回繰り返す(v1非互換) | りふれいん |
| 関数 | 出現回数 | SでAの | 文字列SにAが何回出現するか数える | しゅつげんかいすう |
| 関数 | MID | SでAからCNTを/Sの | 文字列SのA文字目からCNT文字を抽出する | MID |
| 関数 | 文字抜出 | SでAからCNTを/SのCNT | 文字列SのA文字目からCNT文字を抽出する | もじぬきだす |
| 関数 | LEFT | SのCNTだけ/Sで | 文字列Sの左端からCNT文字を抽出する | LEFT |
| 関数 | 文字左部分 | SのCNTだけ/SでCNT | 文字列Sの左端からCNT文字を抽出する | もじひだりぶぶん |
| 関数 | RIGHT | SのCNTだけ/Sで | 文字列Sの右端からCNT文字を抽出する | RIGHT |
| 関数 | 文字右部分 | SのCNTだけ/SでCNT | 文字列Sの右端からCNT文字を抽出する | もじみぎぶぶん |
| 関数 | 区切 | SのAで/Sを | 文字列Sを区切り文字Aで区切って配列で返す | くぎる |
| 関数 | 切取 | SからAまで/SのAを | 文字列Sから文字列Aまでの部分を抽出する(v1非互換) | きりとる |
| 関数 | 文字削除 | SのAからBだけ/Bを/B | 文字列SのA文字目からB文字分を削除して返す | もじさくじょ |
●置換・トリム
| 関数 | 置換 | SのAをBに/SでAからBへ | 文字列Sのうち文字列AをBに全部置換して返す | ちかん |
| 関数 | 単置換 | SのAをBに/SでBへ | 文字列Sのうち、最初に出現するAだけをBに置換して返す | たんちかん |
| 関数 | トリム | Sの/Sを | 文字列Sの前後にある空白を削除する | とりむ |
| 関数 | 空白除去 | Sの/Sを | 文字列Sの前後にある空白を削除する | くうはくじょきょ |
●文字変換
| 関数 | 大文字変換 | Sの/Sを | アルファベットの文字列Sを大文字に変換 | おおもじへんかん |
| 関数 | 小文字変換 | Sの/Sを | アルファベットの文字列Sを小文字に変換 | こもじへんかん |
| 関数 | 平仮名変換 | Sの/Sを | 文字列Sのカタカナをひらがなに変換 | ひらがなへんかん |
| 関数 | カタカナ変換 | Sの/Sを | 文字列Sのひらがなをカタカナに変換 | かたかなへんかん |
| 関数 | 英数全角変換 | Sの/Sを | 文字列Sの半角英数文字を全角に変換 | えいすうぜんかくへんかん |
| 関数 | 英数半角変換 | Sの/Sを | 文字列Sの全角英数文字を半角に変換 | えいすうはんかくへんかん |
| 関数 | 英数記号全角変換 | Sの/Sを | 文字列Sの半角英数記号文字を全角に変換 | えいすうきごうぜんかくへんかん |
| 関数 | 英数記号半角変換 | Sの/Sを | 文字列Sの記号文字を半角に変換 | えいすうきごうはんかくへんかん |
| 関数 | カタカナ全角変換 | Sの/Sを | 文字列Sの半角カタカナを全角に変換 | かたかなぜんかくへんかん |
| 関数 | カタカナ半角変換 | Sの/Sを | 文字列Sの全角カタカナを半角に変換 | かたかなはんかくへんかん |
| 関数 | 全角変換 | Sの/Sを | 文字列Sの半角文字を全角に変換 | ぜんかくへんかん |
| 関数 | 半角変換 | Sの/Sを | 文字列Sの全角文字を半角に変換 | はんかくへんかん |
| 定数 | 全角カナ一覧 | | 'アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンァィゥェォャュョッ、。ー「」' | ぜんかくかないちらん |
| 定数 | 全角カナ濁音一覧 | | 'ガギグゲゴザジズゼゾダヂヅデドバビブベボパピプペポ' | ぜんかくかなだくおんいちらん |
| 定数 | 半角カナ一覧 | | 'ｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜｦﾝｧｨｩｪｫｬｭｮｯ､｡ｰ｢｣ﾞﾟ' | はんかくかないちらん |
| 定数 | 半角カナ濁音一覧 | | 'ｶﾞｷﾞｸﾞｹﾞｺﾞｻﾞｼﾞｽﾞｾﾞｿﾞﾀﾞﾁﾞﾂﾞﾃﾞﾄﾞﾊﾞﾋﾞﾌﾞﾍﾞﾎﾞﾊﾟﾋﾟﾌﾟﾍﾟﾎﾟ' | はんかくかなだくおんいちらん |
●JSON
| 関数 | JSONエンコード | Vを/Vの | オブジェクトVをJSON形式にエンコードして返す | JSONえんこーど |
| 関数 | JSONエンコード整形 | Vを/Vの | オブジェクトVをJSON形式にエンコードして整形して返す | JSONえんこーどせいけい |
| 関数 | JSONデコード | Sを/Sの/Sから | JSON文字列Sをオブジェクトにデコードして返す | JSONでこーど |
●正規表現
| 関数 | 正規表現マッチ | AをBで/AがBに | 文字列Aを正規表現パターンBでマッチして結果を返す(パターンBは「/pat/opt」の形式で指定。optにgの指定がなければ部分マッチが『抽出文字列』に入る) | せいきひょうげんまっち |
| 定数 | 抽出文字列 | | [] | ちゅうしゅつもじれつ |
| 関数 | 正規表現置換 | SのAをBで/AからBに/Bへ | 文字列Sの正規表現パターンAをBに置換して結果を返す(パターンAは/pat/optで指定) | せいきひょうげんちかん |
| 関数 | 正規表現区切 | SをAで | 文字列Sを正規表現パターンAで区切って配列で返す(パターンAは/pat/optで指定) | せいきひょうげんくぎる |
●指定形式
| 関数 | 通貨形式 | Vを/Vの | 数値Vを三桁ごとにカンマで区切る | つうかけいしき |
| 関数 | ゼロ埋 | VをAで | 数値VをA桁の0で埋める | ぜろうめ |
| 関数 | 空白埋 | VをAで | 文字列VをA桁の空白で埋める | くうはくうめ |
●文字種類
| 関数 | かなか判定 | Sを/Sの/Sが | 文字列Sの1文字目がひらがなか判定 | かなかはんてい |
| 関数 | カタカナ判定 | Sを/Sの/Sが | 文字列Sの1文字目がカタカナか判定 | かたかなかはんてい |
| 関数 | 数字判定 | Sを/Sが | 文字列Sの1文字目が数字か判定 | すうじかはんてい |
| 関数 | 数列判定 | Sを/Sが | 文字列S全部が数字か判定 | すうれつかはんてい |
●配列操作
| 関数 | 配列結合 | AをSで | 配列Aを文字列Sでつなげて文字列で返す | はいれつけつごう |
| 関数 | 配列検索 | AのSを/Aから | 配列Aから文字列Sを探してインデックス番号(0起点)を返す。見つからなければ-1を返す。 | はいれつけんさく |
| 関数 | 配列要素数 | Aの | 配列Aの要素数を返す | はいれつようそすう |
| 関数 | 要素数 | Aの | 配列Aの要素数を返す | ようそすう |
| 関数 | 配列挿入 | AのIにSを/Iへ | 配列AのI番目(0起点)に要素Sを追加して返す(v1非互換) | はいれつそうにゅう |
| 関数 | 配列一括挿入 | AのIにBを/Iへ | 配列AのI番目(0起点)に配列bを追加して返す(v1非互換) | はいれついっかつそうにゅう |
| 関数 | 配列ソート | Aの/Aを | 配列Aをソートして返す(A自体を変更) | はいれつそーと |
| 関数 | 配列数値ソート | Aの/Aを | 配列Aをソートして返す(A自体を変更) | はいれつすうちそーと |
| 関数 | 配列カスタムソート | FでAの/Aを | 関数Fで配列Aをソートして返す(引数A自体を変更) | はいれつかすたむそーと |
| 関数 | 配列逆順 | Aの/Aを | 配列Aを逆にして返す。Aを書き換える(A自体を変更)。 | はいれつぎゃくじゅん |
| 関数 | 配列シャッフル | Aの/Aを | 配列Aをシャッフルして返す。Aを書き換える | はいれつしゃっふる |
| 関数 | 配列切取 | AのIを | 配列AのI番目(0起点)の要素を切り取って返す。Aの内容を書き換える。 | はいれつきりとる |
| 関数 | 配列取出 | AのIからCNTを | 配列AのI番目(0起点)からCNT個の要素を取り出して返す。Aの内容を書き換える | はいれつとりだし |
| 関数 | 配列ポップ | Aの/Aから | 配列Aの末尾を取り出して返す。Aの内容を書き換える。 | はいれつぽっぷ |
| 関数 | 配列追加 | AにBを/Aへ | 配列Aの末尾にBを追加して返す。Aの内容を書き換える。 | はいれつついか |
| 関数 | 配列複製 | Aを | 配列Aを複製して返す。 | はいれつふくせい |
| 関数 | 配列足 | AにBを/Aへ/Aと | 配列Aに配列Bを足し合わせて返す。 | はいれつたす |
| 関数 | 配列最大値 | Aの | 配列Aの値の最大値を調べて返す。 | はいれつさいだいち |
| 関数 | 配列最小値 | Aの | 配列Aの値の最小値を調べて返す。 | はいれつさいしょうち |
●二次元配列処理
| 関数 | 表ソート | AのNOを | 二次元配列AでB列目(0起点)(あるいはキー名)をキーに文字列順にソートする。Aの内容を書き換える。 | ひょうそーと |
●二次元配列処理
| 関数 | 表数値ソート | AのNOを | 二次元配列AでB列目(0起点)(あるいはキー名)をキーに数値順にソートする。Aの内容を書き換える。 | ひょうすうちそーと |
| 関数 | 表ピックアップ | AのNOからSを/Sで | 配列Aの列番号B(0起点)(あるいはキー名)で検索文字列Sを含む行を返す | ひょうぴっくあっぷ |
| 関数 | 表完全一致ピックアップ | AのNOからSを/Sで | 配列Aの列番号B(0起点)(あるいはキー名)で検索文字列Sと一致する行を返す | ひょうぴっくあっぷ |
| 関数 | 表検索 | AのCOLでROWからSを/COLに | 二次元配列AでCOL列目(0起点)からキーSを含む行をROW行目から検索して何行目にあるか返す。見つからなければ-1を返す。 | ひょうけんさく |
| 関数 | 表列数 | Aの | 二次元配列Aの列数を調べて返す。 | ひょうれつすう |
| 関数 | 表行数 | Aの | 二次元配列Aの行数を調べて返す。 | ひょうぎょうすう |
| 関数 | 表行列交換 | Aの/Aを | 二次元配列Aの行と列を交換して返す。 | ひょうぎょうれつこうかん |
| 関数 | 表右回転 | Aの/Aを | 二次元配列Aを90度回転して返す。 | ひょうみぎかいてん |
| 関数 | 表重複削除 | AのIを/Iで | 二次元配列AのI列目にある重複項目を削除して返す。 | ひょうじゅうふくさくじょ |
| 関数 | 表列取得 | AのIを | 二次元配列AのI列目を返す。 | ひょうれつしゅとく |
| 関数 | 表列挿入 | AのIにSを/Iへ | 二次元配列Aの(0から数えて)I列目に配列Sを挿入して返す | ひょうれつそうにゅう |
| 関数 | 表列削除 | AのIを | 二次元配列Aの(0から数えて)I列目削除して返す | ひょうれつそうにゅう |
| 関数 | 表列合計 | AのIを/Iで | 二次元配列Aの(0から数えて)I列目を合計して返す。 | ひょうれつごうけい |
| 関数 | 表曖昧検索 | AのROWからCOLでSを | 二次元配列AのROW行目からCOL列目(0起点)で正規表現Sにマッチする行を検索して何行目にあるか返す。見つからなければ-1を返す。(v1非互換) | ひょうれつあいまいけんさく |
| 関数 | 表正規表現ピックアップ | AのCOLからSを/Aで | 二次元配列AでI列目(0起点)から正規表現パターンSにマッチする行をピックアップして返す。 | ひょうせいきひょうげんぴっくあっぷ |
●辞書型変数の操作
| 関数 | 辞書キー列挙 | Aの | 辞書型変数Aのキーの一覧を配列で返す。 | じしょきーれっきょ |
| 関数 | 辞書キー削除 | AからKEYを/Aの | 辞書型変数AからキーKEYを削除して返す（A自体を変更する）。 | じしょきーさくじょ |
| 関数 | 辞書キー存在 | AのKEYが/Aに | 辞書型変数AのキーKEYが存在するか確認 | じしょきーそんざい |
●ハッシュ
| 関数 | ハッシュキー列挙 | Aの | ハッシュAのキー一覧を配列で返す。 | はっしゅきーれっきょ |
| 関数 | ハッシュ内容列挙 | Aの | ハッシュAの内容一覧を配列で返す。 | はっしゅないようれっきょ |
| 関数 | ハッシュキー削除 | AからKEYを/Aの | ハッシュAからキーKEYを削除して返す。 | はっしゅきーさくじょ |
| 関数 | ハッシュキー存在 | AのKEYが/Aに | ハッシュAのキーKEYが存在するか確認 | はっしゅきーそんざい |
●タイマー
| 関数 | 秒待機 | N | 逐次実行構文にて、N秒の間待機する | びょうたいき |
| 関数 | 秒逐次待機 | N | 逐次実行構文にて、N秒の間待機する | びょうちくじたいき |
| 関数 | 秒後 | FをN | 無名関数（あるいは、文字列で関数名を指定）FをN秒後に実行する。変数『対象』にタイマーIDを代入する。 | びょうご |
| 関数 | 秒毎 | FをN | 無名関数（あるいは、文字列で関数名を指定）FをN秒ごとに実行する(『タイマー停止』で停止できる)。変数『対象』にタイマーIDを代入する。 | びょうごと |
| 関数 | 秒タイマー開始時 | FをN | 無名関数（あるいは、文字列で関数名を指定）FをN秒ごとに実行する(『秒毎』と同じ) | びょうたいまーかいししたとき |
| 関数 | タイマー停止 | TIMERIDの/TIMERIDで | 『秒毎』『秒後』や『秒タイマー開始』で開始したタイマーを停止する | たいまーていし |
| 関数 | 全タイマー停止 |  | 『秒毎』『秒後』や『秒タイマー開始』で開始したタイマーを全部停止する | ぜんたいまーていし |
●日時処理(簡易)
| 関数 | 今 |  | 現在時刻を「HH:mm:ss」の形式で返す | いま |
| 関数 | システム時間 |  | 現在のUNIX時間 (UTC(1970/1/1)からの経過秒数) を返す | しすてむじかん |
| 関数 | 今日 |  | 今日の日付を「YYYY/MM/DD」の形式で返す | きょう |
| 関数 | 曜日番号取得 | Sの | Sに指定した日付の曜日番号をで返す。不正な日付の場合は今日の曜日番号を返す。(0=日/1=月/2=火/3=水/4=木/5=金/6=土) | ようびばんごうしゅとく |
●デバッグ支援
| 関数 | エラー発生 | Sの/Sで | 故意にエラーSを発生させる | えらーはっせい |
| 関数 | システム関数一覧取得 |  | システム関数の一覧を取得 | しすてむかんすういちらんしゅとく |
| 関数 | システム関数存在 | FNAMEが/FNAMEの | 文字列で関数名を指定してシステム関数が存在するかを調べる | しすてむかんすうそんざい |
| 関数 | プラグイン一覧取得 |  | 利用中のプラグイン一覧を得る | ぷらぐいんいちらんしゅとく |
| 関数 | モジュール一覧取得 |  | 取り込んだモジュール一覧を得る | もじゅーるいちらんしゅとく |
●URLエンコードとパラメータ
| 関数 | URLエンコード | TEXTを/TEXTから | URLエンコードして返す | URLえんこーど |
| 関数 | URLデコード | TEXTを/TEXTへ/TEXTに | URLデコードして返す | URLでこーど |
| 関数 | URLパラメータ解析 | URLを/URLの/URLから | URLパラメータを解析してハッシュで返す | URLぱらめーたかいせき |

■plugin_browser
●色定数
| 定数 | 水色 | | 'aqua' | みずいろ |
| 定数 | 紫色 | | 'fuchsia' | むらさきいろ |
| 定数 | 緑色 | | 'lime' | みどりいろ |
| 定数 | 青色 | | 'blue' | あおいろ |
| 定数 | 赤色 | | 'red' | あかいろ |
| 定数 | 黄色 | | 'yellow' | きいろ |
| 定数 | 黒色 | | 'black' | くろいろ |
| 定数 | 白色 | | 'white' | しろいろ |
| 定数 | 茶色 | | 'maroon' | ちゃいろ |
| 定数 | 灰色 | | 'gray' | はいいろ |
| 定数 | 金色 | | 'gold' | きんいろ |
| 定数 | 黄金色 | | 'gold' | こがねいろ |
| 定数 | 銀色 | | 'silver' | ぎんいろ |
| 定数 | 白金色 | | 'silver' | しろがねいろ |
| 定数 | オリーブ色 | | 'olive' | おりーぶいろ |
| 定数 | ベージュ色 | | 'beige' | べーじゅいろ |
| 定数 | アリスブルー色 | | 'aliceblue' | ありすぶるーいろ |
| 関数 | RGB | RとGとBで/Bの | 赤緑青を256段階でそれぞれ指定して、#RRGGBB形式の値を返す | RGB |
| 関数 | 色混 | Aの | 配列で[RR,GG,BB]を指定して色を混ぜて#RRGGBB形式の値を返す | いろまぜる |
●システム
| 関数 | 終 |  | ブラウザでプログラムの実行を強制終了する | おわる |
●ダイアログ
| 関数 | 言 | Sと/Sを | メッセージダイアログにSを表示 | いう |
| 関数 | 尋 | Sと/Sを | メッセージSと入力ボックスを出して尋ねる | たずねる |
| 関数 | 文字尋 | Sと/Sを | メッセージSと入力ボックスを出して尋ねる。返り値は常に入力されたままの文字列となる | もじたずねる |
| 関数 | 二択 | Sで/Sの/Sと/Sを | メッセージSと[OK]と[キャンセル]のダイアログを出して尋ねる | にたく |
●ブラウザ操作
| 関数 | ブラウザ移動 | URLに/URLへ | 任意のURLにブラウザ移動(ただし移動後スクリプトの実行は停止する) | ぶらうざいどう |
| 関数 | ブラウザ戻 |  | 任意のURLにブラウザ移動(ただし移動後スクリプトの実行は停止する) | ぶらうざもどる |
| 定数 | ブラウザURL | | '' | NぶらうざURL |
●AJAXとHTTP
| 関数 | AJAX送信時 | CALLBACKのURLまで/URLへ/URLに | 非同期通信(Ajax)でURLにデータを送信し、成功するとcallbackが実行される。その際『対象』にデータが代入される。 | AJAXそうしんしたとき |
| 関数 | GET送信時 | CALLBACKのURLまで/URLへ/URLに | 非同期通信(Ajax)でURLにデータを送信し、成功するとcallbackが実行される。その際『対象』にデータが代入される。 | GETそうしんしたとき |
| 関数 | POSTデータ生成 | PARAMSの/PARAMSを | 連想配列をkey=value&key=value...の形式に変換する | POSTでーたせいせい |
| 関数 | POST送信時 | CALLBACKのURLまでPARAMSを/URLへ/URLに | AjaxでURLにPARAMSをPOST送信し『対象』にデータを設定 | POSTそうしんしたとき |
| 関数 | POSTフォーム送信時 | CALLBACKのURLまでPARAMSを/URLへ/URLに | AjaxでURLにPARAMSをフォームとしてPOST送信し『対象』にデータを設定 | POSTふぉーむそうしんしたとき |
| 関数 | AJAX失敗時 | CALLBACKの | Ajax命令でエラーが起きたとき | AJAXえらーしっぱいしたとき |
| 定数 | AJAXオプション | | '' | AJAXおぷしょん |
| 関数 | AJAXオプション設定 | OPTIONに/OPTIONへ/OPTIONと | Ajax命令でオプションを設定 | AJAXおぷしょんせってい |
| 関数 | AJAX送信 | URLまで/URLへ/URLに | 逐次実行構文にて、非同期通信(Ajax)でURLにデータを送信する。成功すると『対象』にデータが代入される。 | AJAXそうしん |
| 関数 | AJAX逐次送信 | URLまで/URLへ/URLに | 逐次実行構文にて、非同期通信(Ajax)でURLにデータを送信する。成功すると『対象』にデータが代入される。 | AJAXちくじそうしん |
| 関数 | AJAX保障送信 | URLまで/URLへ/URLに | 非同期通信(Ajax)でURLにデータの送信を開始する非同期処理オブジェクト(Promise)を作成する。 | AJAXほしょうそうしん |
| 関数 | HTTP取得 | URLの/URLから/URLを | 逐次実行構文にて、非同期通信(Ajax)でURLにデータを送信する。成功すると『対象』にデータが代入される。失敗すると『AJAX失敗時』を実行。 | HTTPしゅとく |
| 関数 | HTTP逐次取得 | URLの/URLから/URLを | 逐次実行構文にて、非同期通信(Ajax)でURLにデータを送信する。成功すると『対象』にデータが代入される。失敗すると『AJAX失敗時』を実行。 | HTTPちくじしゅとく |
| 関数 | HTTP保障取得 | URLの/URLから/URLを | 非同期通信(Ajax)でURLにデータの送信を開始する非同期処理オブジェクト(Promise)を作成する。 | HTTPほしょうしゅとく |
| 関数 | POST逐次送信 | URLまでPARAMSを/URLへ/URLに | 逐次実行構文にて、AjaxでURLにPARAMSをPOST送信し『対象』にデータを設定。失敗すると『AJAX失敗時』を実行。 | POSTちくじそうしん |
| 関数 | POST送信 | URLまでPARAMSを/URLへ/URLに | 逐次実行構文にて、AjaxでURLにPARAMSをPOST送信し『対象』にデータを設定。失敗すると『AJAX失敗時』を実行。 | POSTそうしん |
| 関数 | POST保障送信 | URLまでPARAMSを/URLへ/URLに | 非同期通信(Ajax)でURLにPARAMSをPOST送信を開始する非同期処理オブジェクト(Promise)を作成する。 | POSTほしょうそうしん |
| 関数 | POSTフォーム逐次送信 | URLまでPARAMSを/URLへ/URLに | 逐次実行構文にて、AjaxでURLにPARAMSをフォームとしてPOST送信し『対象』にデータを設定。失敗すると『AJAX失敗時』を実行。 | POSTふぉーむちくじそうしん |
| 関数 | POSTフォーム送信 | URLまでPARAMSを/URLへ/URLに | 逐次実行構文にて、AjaxでURLにPARAMSをフォームとしてPOST送信し『対象』にデータを設定。失敗すると『AJAX失敗時』を実行。 | POSTふぉーむそうしん |
| 関数 | POSTフォーム保障送信 | URLまでPARAMSを/URLへ/URLに | 非同期通信(Ajax)でURLにPARAMSをフォームとしてPOST送信を開始する非同期処理オブジェクト(Promise)を作成する。 | POSTふぉーむほしょうそうしん |
| 関数 | AJAX内容取得 | RESからTYPEで | 非同期通信(Ajax)の応答から内容を指定した形式で取り出すための非同期処理オブジェクト(Promise)を返す。 | AJAXないようしゅとく |
●DOM操作
| 定数 | DOCUMENT | | '' | DOCUMENT |
| 定数 | WINDOW | | '' | WINDOW |
| 定数 | NAVIGATOR | | '' | NAVIGATOR |
| 関数 | DOM要素ID取得 | IDの/IDを | DOMの要素をIDを指定して取得 | DOMようそIDしゅとく |
| 関数 | DOM要素取得 | Qの/Qを | DOMの要素をクエリqで取得して返す | DOMようそしゅとく |
| 関数 | DOM要素全取得 | Qの/Qを | DOMの要素をクエリqで全部取得して返す | DOMようそぜんしゅとく |
| 関数 | タグ一覧取得 | TAGの/TAGを | 任意のタグの一覧を取得して返す | たぐいちらんしゅとく |
| 関数 | DOM子要素取得 | PAのQを | DOMの要素PAの子要素をクエリqを指定して結果を一つ取得して返す | DOMこようそしゅとく |
| 関数 | DOM子要素全取得 | PAのQを | DOMの要素PAの子要素をクエリqを指定して結果を複数取得して返す | DOMこようそぜんしゅとく |
| 関数 | DOMイベント設定 | DOMのEVENTにFUNCSTRを/EVENTへ | DOMのEVENTになでしこ関数名funcStrのイベントを設定 | DOMいべんとせってい |
| 関数 | DOMテキスト設定 | DOMにTEXTを/DOMの/DOMへ | DOMにテキストを設定 | DOMてきすとせってい |
| 関数 | DOMテキスト取得 | DOMの/DOMから | DOMのテキストを取得 | DOMてきすとしゅとく |
| 関数 | DOM_HTML設定 | DOMにTEXTを/DOMの/DOMへ | DOMにHTML文字列を設定 | DOM_HTMLせってい |
| 関数 | DOM_HTML取得 | DOMの/DOMから | DOMのHTML文字列を取得 | DOM_HTMLしゅとく |
| 関数 | テキスト設定 | DOMにVを/DOMの/DOMへ | DOMのテキストにVを設定 | てきすとせってい |
| 関数 | テキスト取得 | DOMの/DOMから | DOMのテキストを取得 | てきすとしゅとく |
| 関数 | HTML設定 | DOMにVを/DOMの/DOMへ | DOMのHTMLにVを設定 | HTMLせってい |
| 関数 | HTML取得 | DOMの/DOMから | DOMのテキストを取得 | HTMLしゅとく |
| 関数 | DOM属性設定 | DOMのSにVを/Sへ | DOMの属性Sに値Vを設定 | DOMぞくせいせってい |
| 関数 | DOM属性取得 | DOMのSを/DOMから | DOMの属性Sを取得 | DOMぞくせいしゅとく |
| 定数 | DOM和スタイル | |  | DOMわすたいる |
| 関数 | DOMスタイル設定 | DOMのSにVを/Sへ | DOMのスタイルAに値Bを設定 | DOMすたいるせってい |
| 関数 | DOMスタイル一括設定 | DOMにVALUESを/DOMへ | DOMに(オブジェクト型で)スタイル情報を一括設定 | DOMすたいるいっかつせってい |
| 関数 | DOMスタイル取得 | DOMのSTYLEを | DOMのSTYLEの値を取得 | DOMすたいるしゅとく |
| 関数 | DOMスタイル一括取得 | DOMのSTYLEを | DOMのSTYLE(配列で複数指定)の値を取得 | DOMすたいるいっかつしゅとく |
| 関数 | DOM要素作成 | TAGの/TAGを | DOMにTAGの新規要素を作成 | DOMようそさくせい |
| 関数 | DOM子要素追加 | PAにELを/PAへ | DOMの要素PAの子へ要素ELを追加してPAを返す | DOMこようそついか |
| 関数 | DOM子要素削除 | PAからELを | DOMの要素PAの子から要素ELを削除してPAを返す | DOMこようそさくじょ |
●DOM操作/イベント
| 関数 | DOMイベント追加 | DOMのEVENTにFUNCSTRを/EVENTへ | DOMのEVENTになでしこ関数名funcStrのイベントを追加 | DOMいべんとついか |
| 関数 | DOMイベント削除 | DOMのEVENTからFUNCSTRを | DOMのEVENTからなでしこ関数名funcStrのイベントを削除 | DOMいべんとさくじょ |
| 関数 | DOMイベント発火時 | CALLBACKでDOMのEVENTが | DOMのEVENTが発火した時にCALLBACKを実行するように設定 | DOMいべんとはっかしたとき |
| 定数 | 対象イベント | | '' | たいしょういべんと |
| 関数 | DOMイベント処理停止 | EVENTを/EVENTの | キーイベントやマウスイベントで、元々ブラウザが行う処理を中止する | DOMいべんとしょりていし |
| 関数 | クリック時 | FUNCでDOMを | 無名関数FでDOMをクリックした時に実行するイベントを設定 | くりっくしたとき |
| 関数 | 読込時 | FUNCでDOMを | 無名関数FでDOMを読み込んだ時に実行するイベントを設定 | よみこんだとき |
| 関数 | フォーム送信時 | FUNCでDOMを/DOMの | 無名関数Fでフォームを送信した時に実行するイベントを設定 | ふぉーむそうしんしたとき |
| 定数 | 押キー | | '' | おされたきー |
| 関数 | キー押時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してキーを押した時に実行するイベントを設定。『押されたキー』が設定される。 | きーおしたとき |
| 関数 | キー離時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してキーを離した時に実行するイベントを設定。『押されたキー』が設定される。 | きーはなしたとき |
| 関数 | キータイピング時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してキーをプレスした時に実行するイベントを設定。『押されたキー』が設定される。 | きーたいぴんぐしたとき |
| 定数 | マウスX | | 0 | まうすX |
| 定数 | マウスY | | 0 | まうすY |
| 関数 | マウス押時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してマウスボタンを押した時に実行するイベントを設定。『マウスX』『マウスY』に座標が設定される。『対象』にイベントDOM。『対象イベント』にイベント引数。 | まうすおしたとき |
| 関数 | マウス移動時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してマウスカーソルが移動した時に実行するイベントを設定。『マウスX』『マウスY』に座標が設定される。『対象』にイベントDOM。『対象イベント』にイベント引数。 | まうすいどうしたとき |
| 関数 | マウス離時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してマウスボタンを離した時に実行するイベントを設定。『マウスX』『マウスY』に座標が設定される。『対象』にイベントDOM。『対象イベント』にイベント引数。 | まうすはなしたとき |
| 定数 | タッチX | | 0 | たっちX |
| 定数 | タッチY | | 0 | たっちY |
| 定数 | タッチ配列 | | [] | たっちはいれつ |
| 関数 | タッチイベント計算 | Eの | タッチイベントで座標計算を行う。『タッチX』『タッチY』『対象』『対象イベント』が設定される。 | たっちいべんとけいさん |
| 関数 | タッチ開始時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してタッチを開始した時に実行するイベントを設定。 | たっちかいししたとき |
| 関数 | タッチ時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してタッチして指を動かした時に実行するイベントを設定。 | たっちしたとき |
| 関数 | タッチ終了時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してタッチして指を離した時のイベントを設定。 | たっちしゅうりょうしたとき |
| 関数 | タッチキャンセル時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してタッチイベントをキャンセルした時の動作を設定。 | たっちきゃんせるしたとき |
| 関数 | 画面更新時実行 | FUNCを | 画面描画タイミングで関数F(文字列指定も可)を実行する。識別IDを返す。 | がめんこうしんじじっこう |
| 関数 | 画面更新処理取消 | IDの/IDを | 識別IDを指定して『画面更新時実行』を取り消す | がめんこうしんしょりとりけし |
●DOM部品操作
| 定数 | DOM親要素 | | '' | DOMおやようそ |
| 定数 | DOM生成個数 | | 0 | DOMせいせいこすう |
| 関数 | DOM親要素設定 | ELに/ELへ | 「ボタン作成」「エディタ作成」などのDOM要素を追加する対象を指定(デフォルトはdocument)して親要素のDOMオブジェクトを返す | DOMおやようそせってい |
| 関数 | ボタン作成 | LABELの | ラベルlabelを持つbutton要素を追加しDOMオブジェクトを返す | ぼたんさくせい |
| 関数 | エディタ作成 | TEXTの | textの値を持つテキストボックス(input[type='text'])の要素を追加しDOMオブジェクトを返す | えでぃたさくせい |
| 関数 | テキストエリア作成 | TEXTの | textの値を持つtextarea要素を追加しDOMオブジェクトを返す | てきすとえりあさくせい |
| 関数 | ラベル作成 | TEXTの | textの値を持つラベル(span要素)を追加しDOMオブジェクトを返す | らべるさくせい |
| 関数 | 改行作成 |  | 改行(br要素)を追加しDOMオブジェクトを返す | かいぎょうさくせい |
| 関数 | チェックボックス作成 | TEXTの | textのラベルを持つチェックボックス(input[type='checkbox'])要素を追加しDOMオブジェクトを返す | ちぇっくぼっくすさくせい |
| 関数 | セレクトボックス作成 | OPTIONSの | 配列optionsの選択肢を持つselect要素を追加しDOMオブジェクトを返す | せれくとぼっくすさくせい |
●HTML操作
| 関数 | HTML変換 | TEXTを | 文字列をHTMLに変換して返す | HTMLへんかん |
●ローカルストレージ
| 関数 | 保存 | VをKEYに/KEYへ | ブラウザのlocalStorageのキーKに文字列Vを保存 | ほぞん |
| 関数 | 開 | KEYを/KEYから/KEYの | ブラウザのlocalStorageからVを読む | ひらく |
| 関数 | 読 | KEYを/KEYから/KEYの | ブラウザのlocalStorageからVを読む | よむ |
| 関数 | 存在 | KEYが | ブラウザのlocalStorageにKEYが存在しているか調べる | そんざい |
| 関数 | ローカルストレージ保存 | VをKEYに/KEYへ | ブラウザのlocalStorageのKにVを保存 | ろーかるすとれーじほぞん |
| 関数 | ローカルストレージ読 | KEYを/KEYから/KEYの | ブラウザのlocalStorageからVを読む | ろーかるすとれーじよむ |
| 関数 | ローカルストレージキー列挙 |  | ブラウザのlocalStorageのキー一覧を返す | ろーかるすとれーじきーれっきょ |
| 関数 | ローカルストレージキー削除 | KEYを/KEYの | ブラウザのlocalStorageのkeyを削除 | ろーかるすとれーじきーさくじょ |
| 関数 | ローカルストレージ全削除 |  | ブラウザのlocalStorageのデータを全部削除する | ろーかるすとれーじぜんさくじょ |
| 関数 | ローカルストレージ有効確認 |  | ブラウザのlocalStorageが使えるか確認 | ろーかるすとれーじりようかくにん |
| 定数 | 保存オプション | | 'json' | ほぞんおぷしょん |
| 関数 | 保存オプション設定 | Vに/Vへ | ブラウザのlocalStorageへの保存オプション「json」を設定する | ほぞんおぷしょんせってい |
●描画
| 関数 | 描画開始 | CVの/CVへ/CVで | 描画先にCanvas(文字列でクエリの指定も可)を指定して描画API(2D)の利用準備する | びょうがかいし |
| 定数 | 描画中キャンバス | | null | びょうがちゅうきゃんばす |
| 定数 | 描画中コンテキスト | | null | びょうがちゅうこんてきすと |
| 関数 | キャンバス状態保存 |  | Canvasの状態を保存(save) | きゃんばすじょうたいほぞん |
| 関数 | キャンバス状態復元 |  | Canvasの状態を復元(restore) | きゃんばすじょうたいふくげん |
| 関数 | 線色設定 | Vに/Vへ | Canvasの線の描画色(lineStyle)を指定する | せんいろしてい |
| 関数 | 塗色設定 | Vに/Vへ | Canvasへの描画色(fillStyle)を指定する | ぬりいろしてい |
| 関数 | 線描画 | AからBへ/Bまで | [x1, y1]から[x2, y2]まで線を描画する | せんびょうが |
| 関数 | 線太設定 | Vに/Vへ | vに線の太さ設定 | せんふとさせってい |
| 関数 | 四角描画 | Bの/Bへ/Bに | [x, y, w, h]で矩形を描画する | しかくびょうが |
| 関数 | 描画クリア | Bの/Bへ/Bに | [x, y, w, h]の範囲を描画クリア | びょうがくりあ |
| 関数 | 円描画 | XYへRの/XYに | [x, y]へrの円を描画する | えんびょうが |
| 関数 | 楕円描画 | ARGSへ/ARGSに/ARGSの | [x, y, x幅, y幅, 回転, 開始角, 終了角, 左回転か]に楕円を描画する | だえんびょうが |
| 関数 | 多角形描画 | Aで/Aの/Aを | 座標配列vを指定して多角形を描画する | たかっけいびょうが |
| 関数 | 画像読 | URLの/URLを | 画像のURLを読み込んでImageオブジェクトを返す。(URLにdataスキームも指定可能) | がぞうよむ |
| 関数 | 画像逐次読 | URLの/URLを | 画像のURLを読み込んでImageオブジェクトを返す。また完了時『対象』にも代入する。『逐次実行』構文で使う。 | がぞうちくじよむ |
| 関数 | 画像読時 | FでURLの/URLを | 画像のURLを読み込んでコールバック関数Fを読み込み、変数『対象』にImageオブジェクトを代入する | がぞうよんだとき |
| 関数 | 画像描画 | IMGのXYへ/IMGをXYに | 画像IMG(またはURL)を描画先座標[x,y]へ描画し、Imageオブジェクトを返す。座標には2,4,8個の引数を指定可能。 | がぞうびょうが |
| 関数 | 画像部分描画 | IMGのSXYをDXYへ/SXYからDXYに | 画像IMG(またはURL)の座標[sx, sy, sw, sh]を描画先座標[dx, dy, dw, dh]へ描画し、Imageオブジェクトを返す | がぞうかくだいびょうが |
| 関数 | 描画フォント設定 | Nを/Nの/Nで/Nに | 描画フォントを指定する(CSSのフォント設定と同じ 例「36px Aria」) | びょうがふぉんとせってい |
| 関数 | 文字描画 | XYへSの/XYにSを | [x, y]へテキストSを描画する(描画フォント設定でサイズなど指定) | もじびょうが |
| 関数 | 描画起点設定 | XYへ/XYに | 描画位置の起点を[x,y]へ設定する(translate) | びょうがきてんせってい |
| 関数 | 描画回転 | Aだけ/Aに/Aへ | 描画内容をA度だけ回転する(rotate) | びょうがかいてん |
| 関数 | 描画拡大 | XYだけ/XYに/XYへ | 描画内容を[x方向,y方向]だけ拡大する(scale) | びょうがかくだい |
| 関数 | 描画変換マトリクス設定 | Aだけ/Aに/Aへ | 描画内容を[a,b,c,d,e,f]の変換マトリクスに設定。既存内容を破棄して設定(setTransform) | びょうがへんかんまとりくすせってい |
| 関数 | 描画変換マトリクス追加 | Aだけ/Aに/Aへ | 描画内容を[a,b,c,d,e,f]のマトリクスで変換。既存のマトリクスに掛け合わせる(transform) | びょうがへんかんまとりくすついか |
●位置情報
| 関数 | 位置情報取得時 | FUNCの/FUNCに/FUNCへ | 位置情報を取得してコールバック関数内で変数「対象」に配列で[緯度,経度]を返す | いちじょうほうしゅとくしたとき |
| 関数 | 位置情報監視時 | FUNCの/FUNCに/FUNCへ | 位置情報を監視してIDを返す。引数に指定したコールバック関数内で変数「対象」に配列で[緯度,経度]を返す | いちじょうほうかんししたとき |
| 関数 | 位置情報監視停止 | WIDの | 『位置情報監視時』で開始した監視を停止する | いちじょうほうかんしていし |
●音声合成
| 関数 | 話 | Sと/Sを/Sの | 音声合成APIを使って、Sを発話する | はなす |
| 関数 | 話終時 | CALLBACKでSと/Sを/Sの | 音声合成APIを使って、Sを発話し発話した後でcallbackを実行 | はなしおわったとき |
| 関数 | 話者一覧取得 |  | 音声合成APIの話者一覧を得る | わしゃいちらんしゅとく |
| 関数 | 話者設定 | Vに/Vへ | 音声合成APIの話者を指定する | わしゃせってい |
| 定数 | 話者速度 | | 1.0 | わしゃそくど |
| 定数 | 話者声高 | | 1.0 | わしゃこわだか |
| 定数 | 話者音量 | | 1.0 | わしゃこおんりょう |
| 関数 | 話者詳細設定 | OBJで/OBJに/OBJへ | 音声合成APIの話者の設定をオブジェクト形式で設定する。『速度,声高,ピッチ,音量』を指定 | わしゃしょうさいせってい |
●WebSocket
| 関数 | WS接続完了時 | CALLBACKを | WebSocketでサーバに接続完了した時に実行されるイベントを指定 | WSせつぞくかんりょうしたとき |
| 関数 | WS受信時 | CALLBACKを | WebSocketでサーバからメッセージを受信した時に実行されるイベントを指定 | WSじゅしんしたとき |
| 関数 | WSエラー発生時 | CALLBACKを | WebSocketでエラーが発生した時に実行されるイベントを指定 | WSえらーはっせいじ |
| 関数 | WS接続 | Sに/Sへ/Sの | WebSocketサーバsに接続する | WSせつぞく |
| 関数 | WS送信 | Sを/Sと | アクティブなWebSocketへsを送信する | WSそうしん |
| 関数 | WS切断 |  | アクティブなWebSocketを閉じる | WSせつだん |
●オーディオ
| 関数 | オーディオ開 | URLを/URLの | オーディオファイルのURLを指定して、オーディオを読み込み、Audioオブジェクトを返す | おーでぃおひらく |
| 定数 | オーディオ再生位置 | | 0 | おーでぃおさいせいいち |
| 関数 | オーディオ再生 | OBJを | AudioオブジェクトOBJを指定してオーディをを再生 | おーでぃおさいせい |
| 関数 | オーディオ停止 | OBJを | AudioオブジェクトOBJを指定してオーディを停止 | おーでぃおていし |
| 関数 | オーディオ一時停止 | OBJを | AudioオブジェクトOBJを指定してオーディを一時停止 | おーでぃおていし |
●ホットキー
| 関数 | ホットキー登録 | KEYにFNAMEを/KEYで | ホットキーKEYにEVENTを登録する | ほっときーとうろく |
| 関数 | ホットキー解除 | KEYを/KEYの | ホットキーKEYを解除する | ほっときーかいじょ |
●グラフ描画_CHARTJS
| 関数 | グラフ描画 | DATAを/DATAで/DATAの | Chart.jsを利用して、DATAのグラフを描画 | ぐらふびょうが |
| 定数 | グラフオプション | | { | ぐらふおぷしょん |
| 関数 | 線グラフ描画 | DATAを/DATAで/DATAの | 線グラフを描画 | せんぐらふびょうが |
| 関数 | 棒グラフ描画 | DATAを/DATAで/DATAの | 棒グラフを描画 | ぼうぐらふびょうが |
| 関数 | 横棒グラフ描画 | DATAを/DATAで/DATAの | 横棒グラフを描画 | よこぼうぐらふびょうが |
| 関数 | 円グラフ描画 | DATAを/DATAで/DATAの | 円グラフを描画 | えんぐらふびょうが |
| 関数 | 二次元グラフデータ変形 | TのDATAを | 二次元配列をXXグラフ描画の形式に整形する。種類TとDATAを指定。 | にじげんぐらふでーたへんけい |

■plugin_turtle
●タートルグラフィックス/カメ操作
| 関数 | カメ作成 |  | タートルグラフィックスを開始してカメのIDを返す | かめさくせい |
| 関数 | ゾウ作成 |  | ゾウの画像でタートルグラフィックスを開始してIDを返す | ぞうさくせい |
| 関数 | パンダ作成 |  | パンダの画像でタートルグラフィックスを開始してIDを返す | ぱんださくせい |
| 関数 | カメ操作対象設定 | IDに/IDへ/IDの | IDを指定して操作対象となるカメを変更する | かめそうさたいしょうせってい |
| 変数 | カメ描画先 | | 'turtle_cv' | かめびょうがさき |
| 変数 | カメ画像URL | | turtleImage | かめがぞうURL |
| 関数 | カメ画像変更 | URLに/URLへ | カメの画像をURLに変更する | かめがぞうへんこう |
| 定数 | カメ速度 | | 100 | かめそくど |
| 関数 | カメ速度設定 | Vに/Vへ | カメの動作速度vに設定(大きいほど遅い) | かめそくどせってい |
| 関数 | カメ移動 | XYに/XYへ | カメの位置を[x,y]へ移動する | かめいどう |
| 関数 | カメ起点移動 | XYに/XYへ | カメの描画起点位置を[x,y]へ移動する | かめきてんいどう |
| 関数 | カメ進 | Vだけ | カメの位置をVだけ進める | かめすすむ |
| 関数 | カメ戻 | Vだけ | カメの位置をVだけ戻す | かめもどる |
| 関数 | カメ角度設定 | Vに/Vへ/Vの | カメの向きをDEGに設定する | かめかくどせってい |
| 関数 | カメ右回転 | Vだけ | カメの向きをDEGだけ右に向ける | かめみぎかいてん |
| 関数 | カメ左回転 | Vだけ | カメの向きをDEGだけ左に向ける | かめひだりかいてん |
| 関数 | カメペン色設定 | Cに/Cへ | カメのペン描画色をCに設定する | かめぺんいろせってい |
| 関数 | カメペンサイズ設定 | Wに/Wへ | カメペンのサイズをWに設定する | かめぺんさいずせってい |
| 関数 | カメペン設定 | Wに/Wへ | カメペンを使うかどうかをV(オン/オフ)に設定する | かめぺんせってい |
| 関数 | カメパス開始 |  | カメで明示的にパスの描画を開始する | かめぱすかいし |
| 関数 | カメパス閉 |  | カメでパスを明示的に閉じる(省略可能) | かめぱすとじる |
| 関数 | カメパス線引 |  | カメでパスを閉じて、カメペン色設定で指定した色で枠線を引く | かめぱすせんひく |
| 関数 | カメパス塗 |  | カメでパスを閉じて、カメ塗り色設定で指定した色で塗りつぶす | かめぱすぬる |
| 関数 | カメ文字描画 | Sを/Sと/Sの | カメの位置に文字Sを描画 | かめもじびょうが |
| 関数 | カメ文字設定 | Sに/Sへ/Sで | カメ文字描画で描画するテキストサイズやフォント(48px serif)などを設定 | かめもじせってい |
| 関数 | カメ塗色設定 | Cに/Cへ | カメパスの塗り色をCに設定する | かめぬりいろせってい |
| 関数 | カメ全消去 |  | 表示しているカメと描画内容を全部消去する | かめぜんしょうきょ |
| 関数 | カメコマンド実行 | CMDの/CMDを | カメにコマンドSを実行する。コマンドは改行か「;」で区切る。コマンドと引数は「=」で区切り引数はかカンマで区切る | かめこまんどじっこう |
| 関数 | カメ非表示 |  | カメの画像を非表示にする。描画に影響しない。 | かめひひょうじ |
| 関数 | カメ表示 |  | 非表示にしたカメを表示する。 | かめひょうじ |
| 関数 | カメクリック時 | FUNCを | 操作対象のカメをクリックした時のイベントを設定する | かめくりっくしたとき |

■plugin_node
●ts-ignore
●ts-ignore
●ts-ignore
●ファイル入出力
| 関数 | 開 | Sを/Sから | ファイルSを開く | ひらく |
| 関数 | 読 | Sを/Sから | ファイルSを開く | よむ |
| 関数 | バイナリ読 | Sを/Sから | ファイルSをバイナリ(Buffer)として開く | ばいなりよむ |
| 関数 | 保存 | SをFへ/Fに | データSをファイルFヘ書き込む | ほぞん |
| 関数 | SJISファイル読 | Sを/Sから | SJIS形式のファイルSを読み込む | SJISふぁいるよむ |
| 関数 | SJISファイル保存 | SをFへ/Fに | SをSJIS形式でファイルFへ書き込む | SJISふぁいるほぞん |
| 関数 | 起動待機 | Sを | シェルコマンドSを起動し実行終了まで待機する | きどうたいき |
| 関数 | 起動 | Sを | シェルコマンドSを起動 | きどう |
| 関数 | 起動時 | CALLBACKでSを | シェルコマンドSを起動 | きどうしたとき |
| 関数 | ブラウザ起動 | URLを | ブラウザでURLを起動 | ぶらうざきどう |
| 関数 | ファイル列挙 | Sの/Sを/Sで | パスSのファイル名（フォルダ名）一覧を取得する。ワイルドカード可能。「*.jpg;*.png」など複数の拡張子を指定可能。 | ふぁいるれっきょ |
| 関数 | 全ファイル列挙 | Sの/Sを/Sで | パスS以下の全ファイル名を取得する。ワイルドカード可能。「*.jpg;*.png」のように複数の拡張子を指定可能。 | ぜんふぁいるれっきょ |
| 関数 | 存在 | PATHが/PATHの | ファイルPATHが存在するか確認して返す | そんざい |
| 関数 | フォルダ存在 | PATHが/PATHの | ディレクトリPATHが存在するか確認して返す | ふぉるだそんざい |
| 関数 | フォルダ作成 | PATHの/PATHを/PATHに/PATHへ | ディレクトリPATHを作成して返す(再帰的に作成) | ふぉるださくせい |
| 関数 | ファイルコピー | AからBに/AをBへ | パスAをパスBへファイルコピーする | ふぁいるこぴー |
| 関数 | ファイルコピー時 | CALLBACKでAからBに/AをBへ | パスAをパスBへファイルコピーしてcallbackを実行 | ふぁいるこぴーしたとき |
| 関数 | ファイル移動 | AからBに/AをBへ | パスAをパスBへ移動する | ふぁいるいどう |
| 関数 | ファイル移動時 | CALLBACKでAからBに/AをBへ | パスAをパスBへ移動してcallbackを実行 | ふぁいるいどうしたとき |
| 関数 | ファイル削除 | PATHの/PATHを | パスPATHを削除する | ふぁいるさくじょ |
| 関数 | ファイル削除時 | CALLBACKでPATHの/PATHを | パスPATHを削除してcallbackを実行 | ふぁいるさくじょしたとき |
| 関数 | ファイル情報取得 | PATHの/PATHから | パスPATHの情報を調べてオブジェクトで返す | ふぁいるじょうほうしゅとく |
| 関数 | ファイルサイズ取得 | PATHの/PATHから | パスPATHのファイルサイズを調べて返す | ふぁいるさいずしゅとく |
●パス操作
| 関数 | ファイル名抽出 | Sから/Sの | フルパスのファイル名Sからファイル名部分を抽出して返す | ふぁいるめいちゅうしゅつ |
| 関数 | パス抽出 | Sから/Sの | ファイル名Sからパス部分を抽出して返す | ぱすちゅうしゅつ |
| 関数 | 相対パス展開 | AをBで | ファイル名AからパスBを展開して返す | そうたいぱすてんかい |
●フォルダ取得
| 関数 | カレントディレクトリ取得 |  | カレントディレクトリを返す | かれんとでぃれくとりしゅとく |
| 関数 | カレントディレクトリ変更 | DIRに/DIRへ | カレントディレクトリをDIRに変更する | かれんとでぃれくとりへんこう |
| 関数 | 作業フォルダ取得 |  | カレントディレクトリを返す | さぎょうふぉるだしゅとく |
| 関数 | 作業フォルダ変更 | DIRに/DIRへ | カレントディレクトリをDIRに変更する | さぎょうふぉるだへんこう |
| 関数 | ホームディレクトリ取得 |  | ホームディレクトリを取得して返す | ほーむでぃれくとりしゅとく |
| 関数 | デスクトップ |  | デスクトップパスを取得して返す | ですくとっぷ |
| 関数 | マイドキュメント |  | マイドキュメントのパスを取得して返す | まいどきゅめんと |
| 定数 | 母艦パス | | '' | ぼかんぱす |
| 関数 | 母艦パス取得 |  | スクリプトのあるディレクトリを返す | ぼかんぱすしゅとく |
●環境変数
| 関数 | 環境変数取得 | Sの | 環境変数Sを返す | かんきょうへんすうしゅとく |
| 関数 | 環境変数一覧取得 |  | 環境変数の一覧を返す | かんきょうへんすういちらんしゅとく |
●圧縮・解凍
| 関数 | 圧縮解凍ツールパス変更 | Vに/Vへ | 圧縮解凍に使うツールを取得変更する | あっしゅくかいとうつーるぱすへんこう |
| 関数 | 解凍 | AをBに/AからBへ | (v1非互換)ZIPファイルAをBに解凍(実行には7-zipが必要-https://goo.gl/LmKswH) | かいとう |
| 関数 | 解凍時 | CALLBACKでAをBに/AからBへ | 解凍処理を行い、処理が完了したときにcallback処理を実行 | かいとうしたとき |
| 関数 | 圧縮 | AをBに/AからBへ | (v1非互換)ファイルAをBにZIP圧縮(実行には7-zipが必要-https://goo.gl/LmKswH) | あっしゅく |
| 関数 | 圧縮時 | CALLBACKでAをBに/AからBへ | 圧縮処理を行い完了したときにcallback処理を指定 | あっしゅくしたとき |
●Nodeプロセス
| 関数 | 終 |  | Nodeでプログラム実行を強制終了する | おわる |
| 関数 | 終了 |  | Nodeでプログラム実行を強制終了する | しゅうりょう |
| 関数 | 秒待 | SEC | NodeでN秒待つ | びょうまつ |
| 関数 | OS取得 |  | OSプラットフォームを返す(darwin/win32/linux) | OSしゅとく |
| 関数 | OSアーキテクチャ取得 |  | OSアーキテクチャを返す | OSあーきてくちゃしゅとく |
●クリップボード操作
| 関数 | クリップボード | Vを | クリップボードを取得設定（『クリップボード←値』で書換が可能） | くりっぷぼーど |
●コマンドラインと標準入出力
| 定数 | コマンドライン | | '' | こまんどらいん |
| 定数 | ナデシコランタイム | | '' | なでしこらんたいむ |
| 定数 | ナデシコランタイムパス | | '' | なでしこらんたいむぱす |
| 関数 | 標準入力取得時 | CALLBACKを | 標準入力を一行取得した時に、無名関数（あるいは、文字列で関数名を指定）F(s)を実行する | ひょうじゅんにゅうりょくしゅとくしたとき |
| 関数 | 尋 | MSGと/MSGを | 標準入力を一行取得する | たずねる |
●テスト
| 関数 | ASSERT等 | AとBが | mochaによるテストで、ASSERTでAとBが正しいことを報告する | ASSERTひとしい |
●ネットワーク
| 関数 | 自分IPアドレス取得 |  | ネットワークアダプターからIPアドレス(IPv4)を取得して配列で返す | じぶんIPあどれすしゅとく |
| 関数 | 自分IPV6アドレス取得 |  | ネットワークアダプターからIPアドレス(IPv6)を取得して配列で返す | じぶんIPV6あどれすしゅとく |
●Ajax
| 関数 | AJAX送信時 | CALLBACKのURLまで/URLへ/URLに | 非同期通信(Ajax)でURLにデータを送信し、成功するとcallbackが実行される。その際『対象』にデータが代入される。 | AJAXそうしんしたとき |
| 関数 | GET送信時 | CALLBACKのURLまで/URLへ/URLに | 非同期通信(Ajax)でURLにデータを送信し、成功するとcallbackが実行される。その際『対象』にデータが代入される。 | GETそうしんしたとき |
| 関数 | POST送信時 | CALLBACKのURLまでPARAMSを/URLへ/URLに | AjaxでURLにPARAMSをPOST送信し『対象』にデータを設定 | POSTそうしんしたとき |
| 関数 | POSTフォーム送信時 | CALLBACKのURLまでPARAMSを/URLへ/URLに | AjaxでURLにPARAMSをフォームとしてPOST送信し『対象』にデータを設定 | POSTふぉーむそうしんしたとき |
| 関数 | AJAX失敗時 | CALLBACKの | Ajax命令でエラーが起きたとき | AJAXえらーしっぱいしたとき |
| 定数 | AJAXオプション | | '' | Ajax関連のオプションを指定 // @AJAXおぷしょん |
| 関数 | AJAXオプション設定 | OPTIONに/OPTIONへ/OPTIONと | Ajax命令でオプションを設定 | AJAXおぷしょんせってい |
| 関数 | AJAX保障送信 | URLまで/URLへ/URLに | 非同期通信(Ajax)でURLにデータの送信を開始する非同期処理オブジェクト(Promise)を作成する。 | AJAXほしょうそうしん |
| 関数 | HTTP保障取得 | URLの/URLから/URLを | 非同期通信(Ajax)でURLにデータの送信を開始する非同期処理オブジェクト(Promise)を作成する。 | HTTPほしょうしゅとく |
| 関数 | GET保障送信 | URLまで/URLへ/URLに | 非同期通信(Ajax)でURLにデータの送信を開始する非同期処理オブジェクト(Promise)を作成する。 | GETほしょうそうしん |
| 関数 | POST保障送信 | URLまでPARAMSを/URLへ/URLに | 非同期通信(Ajax)でURLにPARAMSをPOST送信を開始する非同期処理オブジェクト(Promise)を作成する。 | POSTほしょうそうしん |
| 関数 | POSTフォーム保障送信 | URLまでPARAMSを/URLへ/URLに | 非同期通信(Ajax)でURLにPARAMSをフォームとしてPOST送信を開始する非同期処理オブジェクト(Promise)を作成する。 | POSTふぉーむほしょうそうしん |
| 関数 | AJAX内容取得 | RESからTYPEで | 非同期通信(Ajax)の応答から内容を指定した形式で取り出すための非同期処理オブジェクト(Promise)を返す。 | AJAXないようしゅとく |
●文字コード
| 関数 | 文字コード変換サポート判定 | CODEの/CODEを | 文字コードCODEをサポートしているか確認 | もじこーどさぽーとはんてい |
| 関数 | SJIS変換 | STRに/STRへ/STRを | (v1非互換)文字列をShift_JISのバイナリバッファに変換 | SJISへんかん |
| 関数 | SJIS取得 | BUFから/BUFを/BUFで | Shift_JISのバイナリバッファを文字列に変換 | SJISしゅとく |
| 関数 | エンコーディング変換 | SをCODEへ/CODEで | 文字列SをCODEへ変換してバイナリバッファを返す | えんこーでぃんぐへんかん |
| 関数 | エンコーディング取得 | BUFをCODEから/CODEで | バイナリバッファBUFをCODEから変換して返す | えんこーでぃんぐしゅとく |
●マウスとキーボード操作
| 関数 | キー送信 | Sを/Sの | Sのキーを送信 | きーそうしん |
| 関数 | 窓アクティブ | Sを/Sの | Sの窓をアクティブにする | まどあくてぃぶ |
●ハッシュ関数
| 関数 | ハッシュ関数一覧取得 |  | 利用可能なハッシュ関数の一覧を返す | はっしゅかんすういちらんしゅとく |
| 関数 | ハッシュ値計算 | SをALGのENCで | データSをアルゴリズムALG(sha256/sha512/md5)のエンコーディングENC(hex/base64)でハッシュ値を計算して返す | はっしゅちけいさん |

■plugin_express
●Webサーバ(Express)
| 定数 | GETデータ | | '' | GETでーた |
| 定数 | POSTデータ | | '' | POSTでーた |
| 関数 | WEBサーバ名前設定 | NAMEに/NAMEへ | Webサーバの名前を変更する | WEBさーばなまえへんこう |
| 関数 | WEBサーバ起動 | PORTNOの/PORTNOで | ポートPORTNOでWebサーバを起動して成功したら『WEBサーバ起動成功した時』を実行する | WEBさーばきどう |
| 関数 | WEBサーバ起動時 | CALLBACKをPORTNOの/PORTNOで | ポートPORTNOでWebサーバを起動して成功したらCALLBACKを実行する | WEBさーばきどうしたとき |
| 関数 | WEBサーバ起動成功時 | CALLBACKを | WEBサーバ起動が成功した時にcallbackを実行 | WEBさーばきどうせいこうしたとき |
| 関数 | WEBサーバ起動失敗時 | CALLBACKを | WEBサーバ起動が失敗した時にcallbackを実行 | WEBさーばきどうしっぱいしたとき |
| 関数 | WEBサーバ静的パス指定 | URLをPATHに/PATHへ | サーバのHTMLや画像などを配置する静的パスを指定する | WEBさーばせいてきぱすしてい |
| 関数 | WEBサーバGET時 | CALLBACKをURIに/URIへ | URIにGETメソッドがあった時の処理を指定 | WEBさーばGETしたとき |
| 関数 | WEBサーバPOST時 | CALLBACKをURIに/URIへ | URIにPOSTメソッドがあった時の処理を指定 | WEBさーばPOSTしたとき |
| 関数 | WEBサーバPUT時 | CALLBACKをURIに/URIへ | URIにPOSTメソッドがあった時の処理を指定 | WEBさーばPUTしたとき |
| 関数 | WEBサーバDELETE時 | CALLBACKをURIに/URIへ | URIにPOSTメソッドがあった時の処理を指定 | WEBさーばDELETEしたとき |
| 関数 | WEBサーバヘッダ出力 | OBJを/OBJの | クライアントにヘッダOBJを出力 | WEBさーばへっだしゅつりょく |
| 関数 | WEBサーバステータス出力 | NOを/NOの | クライアントにステータスNOを出力 | WEBさーばすてーたすしゅつりょく |
| 関数 | WEBサーバ出力 | Sを/Sと | クライアントにSを出力 | WEBさーばしゅつりょく |
| 関数 | WEBサーバリダイレクト | URLへ/URLに | URLにリダイレクトする | WEBさーばりだいれくと |

■plugin_markup
●マークアップ
| 関数 | マークダウンHTML変換 | Sを | マークダウン形式で記述された文字列SをHTML形式に変換する | まーくだうんHTMLへんかん |
| 関数 | HTML整形 | Sを | HTML形式で記述された文字列Sを整形する | HTMLせいけい |

■plugin_math
●三角関数
| 関数 | SIN | Vの | ラジアン単位VのSINを求める | SIN |
| 関数 | COS | Vの | ラジアン単位VのCOSを求める | COS |
| 関数 | TAN | Vの | ラジアン単位VのTANを求める | TAN |
| 関数 | ARCSIN | Vの | ラジアン単位VのARCSINを求める | ARCSIN |
| 関数 | ARCCOS | Vの | ラジアン単位VのARCCOSを求める | ARCCOS |
| 関数 | ARCTAN | Vの | ラジアン単位VのARCTANを求める | ARCTAN |
| 関数 | ATAN2 | YとXの | ARCTAN(Y/X)をラジアン単位で返す | ATAN2 |
| 関数 | 座標角度計算 | XYの | 点[0,0]から[x,y]の直線とX軸の角度(度)を返す | ざひょうかくどけいさん |
| 関数 | RAD2DEG | Vを | ラジアンから度に変換 | RAD2DEG |
| 関数 | DEG2RAD | Vを | 度からラジアンに変換 | DEG2RAD |
| 関数 | 度変換 | Vを | ラジアンから度に変換 | どへんかん |
| 関数 | ラジアン変換 | Vを | 度からラジアンに変換 | らじあんへんかん |
●算術関数
| 関数 | SIGN | Vの | Vが0なら0を、0超なら1を、0未満なら-1を返す | SIGN |
| 関数 | 符号 | Vの | Vが0なら0を、0超なら1を、0未満なら-1を返す | ふごう |
| 関数 | ABS | Aの | Vの絶対値を返す | ABS |
| 関数 | 絶対値 | Aの | Vの絶対値を返す | ぜったいち |
| 関数 | EXP | Aの | e（自然対数の底）の A 乗の値を返す | EXP |
| 関数 | HYPOT | AとBの | 直角三角形の二辺の長さA,Bから斜辺を求めて返す。 | HYPOT |
| 関数 | 斜辺 | AとBの | 直角三角形の二辺の長さA,Bから斜辺を求めて返す。 | しゃへん |
| 関数 | LN | Aの | 実数式 A の自然対数（Ln(A) = 1）を返す | LN |
| 関数 | LOG | Aの | Aの自然対数（底はE）を返す | LOG |
| 関数 | LOGN | AでBの | 指定された底AでBの対数を計算して返す | LOGN |
| 関数 | FRAC | Aの | 実数Aの小数部分を返す | FRAC |
| 関数 | 小数部分 | Aの | 実数Aの小数部分を返す | しょうすうぶぶん |
| 関数 | 整数部分 | Aの | 実数Aの整数部分を返す | せいすうぶぶん |
| 関数 | 乱数 | Aの | 0から(A-1)までの乱数を返す | らんすう |
| 関数 | SQRT | Aの | Aの平方根を返す | SQRT |
| 関数 | 平方根 | Aの | Aの平方根を返す | へいほうこん |
●数値切上切捨丸め
| 関数 | ROUND | Vを | 実数型の値Vを丸めてもっとも近い整数値を返す | ROUND |
| 関数 | 四捨五入 | Vを/Vの | 実数型の値Vを丸めてもっとも近い整数値を返す | ししゃごにゅう |
| 関数 | 小数点切上 | AをBで | 整数Aを小数点第B桁で切り上げして返す | しょうすうてんきりあげ |
| 関数 | 小数点切下 | AをBで | 整数Aを小数点第B桁で切り下げして返す | しょうすうてんきりさげ |
| 関数 | 小数点四捨五入 | AをBで | 実数Aを小数点第B桁で四捨五入して返す | しょうすうてんししゃごにゅう |
| 関数 | CEIL | Vを | 数値を正の無限大方向へ切り上げて返す。 | CEIL |
| 関数 | 切上 | Vを | 数値を正の無限大方向へ切り上げて返す。 | きりあげ |
| 関数 | FLOOR | Vを | 数値を負の無限大方向へ切り下げて返す。 | FLOOR |
| 関数 | 切捨 | Vを | 数値を負の無限大方向へ切り下げて返す。 | きりすて |

■plugin_csv
●CSV操作
| 関数 | CSV取得 | STRを/STRの/STRで | CSV形式のデータstrを強制的に二次元配列に変換して返す | CSVしゅとく |
| 関数 | TSV取得 | STRを/STRの/STRで | TSV形式のデータstrを強制的に二次元配列に変換して返す | TSVしゅとく |
| 関数 | 表CSV変換 | Aを | 二次元配列AをCSV形式に変換して返す | ひょうCSVへんかん |
| 関数 | 表TSV変換 | Aを | 二次元配列AをTSV形式に変換して返す | ひょうTSVへんかん |

■plugin_datetime
●日時処理
| 定数 | 元号データ | | require('./era.json') | げんごうでーた |
| 関数 | 今 |  | 現在時刻を「HH:mm:ss」の形式で返す | いま |
| 関数 | システム時間 |  | 現在のUNIX時間 (UTC(1970/1/1)からの経過秒数) を返す | しすてむじかん |
| 関数 | 今日 |  | 今日の日付を「YYYY/MM/DD」の形式で返す | きょう |
| 関数 | 明日 |  | 明日の日付を「YYYY/MM/DD」の形式で返す (v1非互換) | あす |
| 関数 | 昨日 |  | 昨日の日付を「YYYY/MM/DD」の形式で返す (v1非互換) | きのう |
| 関数 | 今年 |  | 今年が何年かを西暦で返す | ことし |
| 関数 | 来年 |  | 来年が何年かを西暦で返す | らいねん |
| 関数 | 去年 |  | 去年が何年かを西暦で返す | きょねん |
| 関数 | 今月 |  | 今月が何月かを返す | こんげつ |
| 関数 | 来月 |  | 来月が何月かを返す | らいげつ |
| 関数 | 先月 |  | 先月が何月かを返す | せんげつ |
| 関数 | 曜日 | Sの | 日付Sの曜日を返す | ようび |
| 関数 | 曜日番号取得 | Sの | Sに指定した日付の曜日番号をで返す。不正な日付の場合は今日の曜日番号を返す。(0=日/1=月/2=火/3=水/4=木/5=金/6=土) | ようびばんごうしゅとく |
| 関数 | UNIX時間変換 | Sの/Sを/Sから | 日時SをUNIX時間 (UTC(1970/1/1)からの経過秒数) に変換して返す(v1非互換) | UNIXじかんへんかん |
| 関数 | UNIXTIME変換 | Sの/Sを/Sから | 日時SをUNIX時間 (UTC(1970/1/1)からの経過秒数) に変換して返す | UNIXTIMEへんかん |
| 関数 | 日時変換 | TMを/TMから | UNIX時間 (UTC(1970/1/1)からの経過秒数) を「YYYY/MM/DD HH:mm:ss」の形式に変換 | にちじへんかん |
| 関数 | 和暦変換 | Sを | Sを和暦に変換する。Sは明治以降の日付が有効。 | われきへんかん |
| 関数 | 年数差 | AとBの/AからBまでの | 日付AとBの差を年数で求めて返す。A<Bなら正の数、そうでないなら負の数を返す (v1非互換)。 | ねんすうさ |
| 関数 | 月数差 | AとBの/AからBまでの | 日付AとBの差を月数で求めて返す。A<Bなら正の数、そうでないなら負の数を返す (v1非互換)。 | げっすうさ |
| 関数 | 日数差 | AとBの/AからBまでの | 日付AとBの差を日数で求めて返す。A<Bなら正の数、そうでないなら負の数を返す。 | にっすうさ |
| 関数 | 日時差 | AとBのUNITによる/AからBまでの | 日時AとBの差を種類unitで返す。A<Bなら正の数、そうでないなら負の数を返す (v1非互換)。 | にちじさ |
| 関数 | 時間差 | AとBの/AからBまでの | 時間AとBの時間の差を求めて返す。A<Bなら正の数、そうでないなら負の数を返す。 | じかんさ |
| 関数 | 分差 | AとBの/AからBまでの | 時間AとBの分数の差を求めて返す。A<Bなら正の数、そうでないなら負の数を返す。 | ふんさ |
| 関数 | 秒差 | AとBの/AからBまでの | 時間AとBの差を秒差で求めて返す。A<Bなら正の数、そうでないなら負の数を返す。 | びょうさ |
| 関数 | 時間加算 | SにAを | 時間SにAを加えて返す。Aには「(+｜-)hh:nn:dd」で指定する。 | じかんかさん |
| 関数 | 日付加算 | SにAを | 日付SにAを加えて返す。Aには「(+｜-)yyyy/mm/dd」で指定する。 | ひづけかさん |
| 関数 | 日時加算 | SにAを | 日時SにAを加えて返す。Aは「(+｜-)1(年/ヶ月/日/時間/分/秒)」のように指定する (v1非互換)。 | にちじかさん |

■plugin_caniuse
●ブラウザサポート
| 定数 | ブラウザ名変換表 | | require('caniuse-db/data.json').agents | ぶらうざめいへんかんひょう |
| 関数 | 対応ブラウザ一覧取得 |  | 対応しているブラウザの一覧を取得する | たいおうぶらうざいちらんしゅとく |

■plugin_kansuji
●漢数字関連
| 関数 | 漢数字 | INPUTを/INPUTの | 引数を数字と解釈して漢数字の文字列を返す | かんすうじ |
| 関数 | 算用数字 | INPUTを/INPUTの | U引数を漢数字と解釈して数値を返す | さんようすうじ |

■plugin_weykturtle3d
●3Dタートルグラフィックス/カメ操作
| 関数 | T3Dカメ作成 |  | タートルグラフィックスを開始してカメのIDを返す | T3Dかめさくせい |
| 関数 | T3Dカメ操作対象設定 | IDに/IDへ/IDの | IDを指定して操作対象となるカメを変更する | T3Dかめそうさたいしょうせってい |
| 変数 | T3Dカメ描画先 | | 'turtle3d_div' | T3Dかめびょうがさき |
| 変数 | T3DカメモデルURL | | '' | T3DかめもでるURL |
| 関数 | T3Dカメモデル変更 | URLに/URLへ | カメのモデルをURLに変更する | T3Dかめもでるへんこう |
| 定数 | T3Dカメ速度 | | 100 | T3Dかめそくど |
| 関数 | T3Dカメ速度設定 | Vに/Vへ | カメの動作速度vに設定(大きいほど遅い) | T3Dかめそくどせってい |
| 関数 | T3Dカメ移動 | XYZに/XYZへ | カメの位置を[x,y,z]へ移動する | T3Dかめいどう |
| 関数 | T3Dカメ原点設定 |  | カメの原点を現在の位置・向きに設定する | T3Dかめげんてんせってい |
| 関数 | T3Dカメ原点移動 |  | カメを原点の位置・向きに移動する(描画はしない) | T3Dかめげんてんいどう |
| 関数 | T3Dカメ起点移動 | XYZに/XYZへ | カメの描画起点位置を[x,y,z]へ移動する | T3Dかめきてんいどう |
| 関数 | T3Dカメ進 | Vだけ | カメの位置をVだけ進める | T3Dかめすすむ |
| 関数 | T3Dカメ戻 | Vだけ | カメの位置をVだけ戻す | T3Dかめもどる |
| 関数 | T3Dカメ上平行移動 | Vだけ | カメの位置を上にVだけ進める | T3Dかめうえへいこういどう |
| 関数 | T3Dカメ下平行移動 | Vだけ | カメの位置を下にVだけ進める | T3Dかめしたへいこういどう |
| 関数 | T3Dカメ左平行移動 | Vだけ | カメの位置を左にVだけ進める | T3Dかめひだりへいこういどう |
| 関数 | T3Dカメ右平行移動 | Vだけ | カメの位置を右にVだけ進める | T3Dかめみぎへいこういどう |
| 関数 | T3Dカメ動 | DIRへVだけ/DIRに | カメの位置をDIRにVだけ進める | T3Dかめうごく |
| 関数 | T3Dカメ角度設定 | Vに/Vへ/Vの | カメの向きをオイラー(XYZ)にて設定する | T3Dかめかくどせってい |
| 関数 | T3Dカメ右回転 | Vだけ | カメの向きをDEGだけ右に向ける | T3Dかめみぎかいてん |
| 関数 | T3Dカメ左回転 | Vだけ | カメの向きをDEGだけ左に向ける | T3Dかめひだりかいてん |
| 関数 | T3Dカメ上回転 | Vだけ | カメの向きをDEGだけ上に向ける | T3Dかめうえかいてん |
| 関数 | T3Dカメ下回転 | Vだけ | カメの向きをDEGだけ下に向ける | T3Dかめしたかいてん |
| 関数 | T3Dカメ回転 | DIRへVだけ/DIRに | カメの向きをDEGだけDIRに向ける | T3Dかめかいてん |
| 関数 | T3Dカメ右ロール | Vだけ | カメをDEGだけ右に傾ける | T3Dかめみぎろーる |
| 関数 | T3Dカメ左ロール | Vだけ | カメのDEGだけ左に傾ける | T3Dかめひだりろーる |
| 関数 | T3Dカメ傾 | DIRにVだけ/DIRへ | カメをDEGだけDIRに傾ける | T3Dかめかたむける |
| 関数 | T3Dカメペン色設定 | Cに/Cへ | カメのペン描画色をCに設定する | T3Dかめぺんいろせってい |
| 関数 | T3Dカメペンサイズ設定 | Wに/Wへ | カメペンのサイズをWに設定する | T3Dかめぺんさいずせってい |
| 関数 | T3Dカメペン設定 | Wに/Wへ | カメペンを使うかどうかをV(オン/オフ)に設定する | T3Dかめぺんせってい |
| 関数 | T3Dカメ全消去 |  | 表示しているカメと描画内容を全部消去する | T3Dかめぜんしょうきょ |
| 関数 | T3Dカメ非表示 |  | カメのモデルを非表示にする。描画に影響しない。 | T3Dかめひひょうじ |
| 関数 | T3Dカメ表示 |  | 非表示にしたカメのモデルを表示する。 | T3Dかめひょうじ |
| 関数 | T3D視点カメ設定 | Wに/Wへ | 指定したカメを視点として使用する | T3Dしてんかめせってい |
●3Dタートルグラフィックス/基本機能
| 関数 | T3D描画準備 | TOに/TOへ | 指定したDOMのIDに対する描画を準備し、描画オブジェクトを返す | T3Dびょうがじゅんび |
| 関数 | T3D描画 |  | 現在の状態を描画する | T3Dびょうが |
| 関数 | T3D背景色設定 | Cに/Cへ | canvasをクリアする際の背景色を設定する | T3Dはいけいしょくせってい |
| 関数 | T3D背景透過設定 | Cに/Cへ | canvasをクリアする際の背景のアルファ値を設定する | T3Dはいけいとうかせってい |
| 関数 | T3DJSON取得 |  | 描画した線のJSON形式で取得する | T3DJSONしゅとく |
●3Dタートルグラフィックス/ヘルパ機能
| 関数 | T3Dコントロール有効 |  | 組み込んだコントロールを有効にする | T3Dこんとろーるゆうこう |
| 関数 | T3Dコントロール無効 |  | 組み込んだコントロールを無効にする | T3Dこんとろーるむこう |
| 関数 | T3Dカメラヘルパ表示 |  | カメラヘルパーを表示する | T3Dかめらへるぱひょうじ |
| 関数 | T3Dカメラヘルパ非表示 |  | カメラヘルパーを非表示にする | T3Dかめらへるぱひひょうじ |
| 関数 | T3D軸線ヘルパ表示 |  | 座標軸ヘルパーを表示する | T3Dじくせんへるぱひょうじ |
| 関数 | T3D軸線ヘルパ非表示 |  | 座標軸ヘルパーを非表示にする | T3Dじくせんへるぱひひょうじ |

■plugin_webworker
●イベント定数
| 定数 | 対象イベント | | '' | たいしょういべんと |
| 定数 | 受信データ | | '' | たいしょういべんと |
| 定数 | ワーカーURL | | '' | わーかーURL |
| 関数 | ワーカーURL設定 | URLに/URLへ/URLと | なでしこv3のファイルのあるURLを設定 | わーかーURLせってい |
●NAKOワーカー
| 関数 | ワーカー起動 | URLで/URLを/URLの | 指定したURLでWebWorkerを起動する。ワーカオブジェクトを返す。 | わーかーきどう |
| 関数 | ワーカーJS起動 | SRCで/SRCを/SRCの | 指定したJavascriptのソースでWebWorkerを起動する。ワーカオブジェクトを返す。 | わーかーJSきどう |
| 関数 | NAKOワーカー起動 | PLUGINSで | 指定したなでしこ３のWebWorkerを起動する。ワーカオブジェクトを返す。(可変引数) | NAKOわーかーきどう |
| 関数 | NAKOワーカーハンドラ設定 | WORKに/WORKへ/WORKの | ワーカーにNAKOワーカーのための設定を行う。 | NAKOわーかーはんどらせってい |
| 関数 | NAKOワーカーデータ受信時 | FUNCでWORKから | 無名関数Fでなでしこv3エンジンに対してワーカーメッセージによりデータを受信した時に実行するイベントを設定。『受信データ』に受信したデータ。『対象イベント』にイベント引数。(可変引数) | NAKOわーかーでーたじゅしんしたとき |
| 関数 | NAKOワーカー表示時 | FUNCでWORKから | 無名関数Fでなでしこv3エンジンに対してワーカーメッセージにより表示データを受信した時に実行するイベントを設定。『受信データ』に表示しようとしたデータ。『対象イベント』にイベント引数。 | NAKOわーかーひょうじしたとき |
| 関数 | ワーカーメッセージ受信時 | FUNCでWORKから | 無名関数Fでworkに対してメッセージを受信した時に実行するイベントを設定。『受信データ』に受信したデータ。『対象イベント』にイベント引数。(可変引数) | わーかーめっせーじじゅしんしたとき |
| 関数 | NAKOワーカープログラム起動 | WORKにDATAを/WORKで | WORKERに固有の形式でプログラムの転送と実行行う。 | NAKOわーかーぷろぐらむきどう |
| 関数 | NAKOワーカーリセット | WORKを | WORKERに固有の形式でプログラムの転送と実行行う。 | わーかーりせっと |
| 関数 | ワーカー終了 | WORKを | WORKERを終了する。(可変引数) | わーかーしゅうりょう |
| 関数 | NAKOワーカー終了 | WORKを | WORKERを終了する。(可変引数) | NAKOわーかーしゅうりょう |
| 関数 | NAKOワーカーデータ送信 | DATAをWORKに/WORKへ | WORKERに固有の形式でデータを送信する。(可変引数) | NAKOわーかーでーたそうしん |
| 関数 | ワーカーメッセージ送信 | MSGをWORKに/WORKへ | WORKERにメッセージを送信する。(可変引数) | わーかーめっせーじそうしん |
| 関数 | NAKOワーカー転送 | DATASをWORKに/WORKへ | WORKERにユーザー定義関数またはユーザ定義のグローバル変数を転送する。(可変引数) | NAKOわーかーてんそう |

■plugin_promise
●非同期処理の保証の定数
| 定数 | そ | | '' | そ |
●非同期処理の保証
| 関数 | 動時 | CALLBACKを/CALLBACKで | 非同期処理を作成する。非同期処理オブジェクト(Promise)を返す。 | うごくとき |
| 関数 | 成功時 | CALLBACKをPROMISEの/PROMISEが/PROMISEに | 非同期処理で成功したときにcallbackが実行される。その際『対象』にデータが代入される。 | せいこうしたとき |
| 関数 | 処理時 | CALLBACKをPROMISEの/PROMISEが/PROMISEに | 非同期処理で終了した時にcallbackが実行される。引数と『対象』は、成功時は真とデータが設定され、失敗時は、偽と理由が設定される。は偽が渡される。 | しょりしたとき |
| 関数 | 失敗時 | CALLBACKをPROMISEの/PROMISEが/PROMISEに | 非同期処理で失敗したときにcallbackが実行される。その際『対象』にエラーが代入される。 | しっぱいしたとき |
| 関数 | 終了時 | CALLBACKをPROMISEの/PROMISEが/PROMISEに | 非同期処理で終了したときにcallbackが実行される。成功時・失敗時・処理時とは別に実行される。 | しゅうりょうしたとき |
| 関数 | 束 | ...ARGSと/...ARGSを | 非同期処理をまとめる。 | たばねる |

■nadesiko3-sqlite3(拡張プラグイン)
●SQLite3
| 定数 | SQLITE3今挿入ID | | '?' | SQLITE3いまそうにゅうID |
| 関数 | SQLITE3開 | Sを/Sの | SQlite3のデータベースを開いて、データベースオブジェクトを返す | SQLITE3ひらく |
| 関数 | SQLITE3閉 |  | アクティブなSQlite3のデータベースを閉じる | SQLITE3とじる |
| 関数 | SQLITE3切替 | DBに/DBへ | アクティブなSQlite3のデータベースをDB(SQLITE3開くで開いたもの)に切り替える | SQLITE3きりかえる |
| 関数 | SQLITE3実行時 | FにSQLをPARAMSで | SQLをパラメータPARAMSで実行する。完了するとコールバック関数Fを実行する。 | SQLITE3じっこうしたとき |
| 関数 | SQLITE3取得時 | FにSQLをPARAMSで | SQLをパラメータPARAMSで取得実行する。完了するとコールバック関数Fが実行され、結果は第一引数に与えられる。 | SQLITE3じっこうしゅとくしたとき |
| 関数 | SQLITE3逐次実行 | SQLをPARAMSで | 逐次実行構文にて、SQLとパラメータPARAMSでSQLを実行し、変数『対象』に結果を得る。 | SQLITE3ちくじじっこう |
| 関数 | SQLITE3逐次全取得 | SQLをPARAMSで | 逐次実行構文内で、SQLとパラメータPARAMSでSQLを実行して結果を得る。 | SQLITE3ちくじぜんしゅとく |
| 関数 | SQLITE3逐次取得 | SQLをPARAMSで | 逐次実行構文内で、SQLとパラメータPARAMSでSQLを実行して結果を得る。 | SQLITE3ちくじしゅとく |

■plugin_sqlite3sync(拡張プラグイン)
●SQLite3同期
| 関数 | SQLITE3開 | Fを/Fの | SQLite3のデータベースFを開いて、データベースオブジェクトを返す | SQLITE3ひらく |
| 関数 | SQLITE3閉 |  | アクティブなSQlite3のデータベースを閉じる | SQLITE3とじる |
| 関数 | SQLITE3同期切替 | DBに/DBへ | 操作対象のデータベースをDB(『SQLITE3同期開』を使用)に切り替える | SQLITE3どうききりかえる |
| 関数 | SQLITE3実行 | SQLをPARAMSで | SQLをパラメータPARAMSで実行する。 | SQLITE3じっこう |
| 関数 | INSERT | TBLにPARAMSを/TBLへ | INSERT文を実行。TBLへハッシュPARAMSを挿入。 | INSERT |
| 関数 | SQLITE3挿入 | TBLにPARAMSを/TBLへ | INSERT文を実行。TBLへハッシュPARAMSを挿入。 | SQLITE3そうにゅう |
| 関数 | UPDATE | TBLのWHEREをPARAMSに/PARAMSへ | UPDATE文を実行。TBLのWHEREをPARAMSに更新。 | UPDATE |
| 関数 | SQLITE3更新 | TBLのWHEREをPARAMSに/PARAMSへ | UPDATE文を実行。TBLのWHEREをPARAMSに更新。 | SQLITE3こうしん |

■plugin_odbc(拡張プラグイン)
●ODBC
| 関数 | ODBC逐次開 | Sを/Sの/Sで | 逐次実行構文にて、ODBCのデータベースを開く | ODBCちくじひらく |
| 関数 | ODBC開 | Sを/Sの/Sで | ODBCのデータベースを同期的に開いてオブジェクトを返す | ODBCひらく |
| 関数 | ODBC逐次実行 | SQLをPARAMSで | 逐次実行構文にて、SQLとパラメータPARAMSでSQLを実行し、変数『対象』に結果を得る。 | ODBCちくじじっこう |
| 関数 | ODBC実行 | SQLをPARAMSで | 逐次実行構文内で、SQLとパラメータPARAMSでSQLを実行して結果を得る。 | ODBCじっこう |
| 関数 | ODBC閉 |  | ODBCで開いているデータベースを閉じる | ODBCとじる |
| 関数 | ODBC逐次閉 |  | 逐次実行構文でODBCで開いているデータベースを閉じる | ODBCちくじとじる |
| 関数 | ODBCトランザクション開始 |  | ODBCでトランザクションを開始する | ODBCとらんざくしょんかいし |
| 関数 | ODBCトランザクション終了 |  | ODBCでトランザクションを終了する | ODBCとらんざくしょんしゅうりょう |

■plugin_mssql(拡張プラグイン)
●SQLServer
| 関数 | MSSQL逐次開 | Sを/Sの/Sで | 逐次実行構文にてデータベースを開く | MSSQLちくじひらく |
| 関数 | MSSQL逐次実行 | SQLをPARAMSで | 逐次実行構文にて、SQLとパラメータPARAMSでSQLを実行し、変数『対象』に結果を得る。 | MSSQLちくじじっこう |
| 関数 | MSSQL逐次閉 |  | 開いているデータベースを閉じる | MSSQLとじる |

■plugin_mysql(拡張プラグイン)
●MySQL
| 関数 | MYSQL開 | Sを/Sの/Sで | データベースを開く | MYSQLひらく |
| 関数 | MYSQL閉 |  | データベースを閉じる | MYSQLとじる |
| 関数 | MYSQL逐次実行 | SQLをPARAMSで | 逐次実行構文にて、SQLとパラメータPARAMSでSQLを実行し、変数『対象』に結果を得る。INSERT句の場合は『対象[insertId]』でIDが得られる。 | MYSQLちくじじっこう |

■plugin_postgresql(拡張プラグイン)
●PostgreSQL
| 関数 | PG開 | Sを/Sの/Sで | データベースを開く | PGひらく |
| 関数 | PG閉 |  | データベースを閉じる | PGとじる |
| 関数 | PG逐次実行 | SQLをPARAMSで | 逐次実行構文にて、SQLとパラメータPARAMSでSQLを実行し、変数『対象』に結果を得る。SELECT句以外を実行した時も情報が『対象』に入る。 | PGちくじじっこう |

■plugin_websocket(拡張プラグイン)
●WebSocketサーバ
| 関数 | WSサーバ起動 | PORTNOの/PORTNOで | ポートPORTNOでサーバを起動して成功したら『WSサーバ起動成功した時』を実行する | WSさーばきどう |
| 関数 | WSSサーバ起動 | CONFの/CONFで | 設定CONF{cert:サーバ証明書,key:キーファイル,port:ポート番号}を指定してWSSサーバを起動して成功したら『WSサーバ起動成功した時』を実行する | WSSさーばきどう |
| 関数 | WSサーバ起動成功時 | CALLBACKを | WSサーバ起動が成功した時にcallbackを実行 | WSさーばきどうせいこうしたとき |
| 関数 | WSサーバ起動失敗時 | CALLBACKを | WSサーバ起動が失敗した時にcallbackを実行 | WSさーばきどうしっぱいしたとき |
| 関数 | WSサーバ接続時 | CALLBACKを | WSサーバにクライアントが接続してきた時callbackを実行。接続情報は、変数『対象』に入る | WSさーばせつぞくしたとき |
| 関数 | WSサーバ受信時 | CALLBACKで | WSサーバでメッセージを受信した時に実行される。受信データは『対象』に代入される | WSさーばじゅしんしたとき |
| 関数 | WSサーバ全送信 | Sを | WSサーバで全員にメッセージSを送信する | WSさーばぜんそうしん |
| 関数 | WSクライアント一覧取得 | Sを | WSサーバに接続しているクライアントの一覧を返す | WSくらいあんといちらんしゅとく |

■plugin_htmlparser(拡張プラグイン)
●HTMLパーサ(コンソール)
| 定数 | HTML応答ヘッダ | | '' | HTMLおうとうへっだ |
| 関数 | HTML逐次URL開 | URLを | 任意のURLを開いてパースする。 | HTMLちくじURLひらく |
| 関数 | HTMLパース | HTMLを | 任意のHTML文字列をパースする。 | HTMLぱーす |
| 関数 | DOM要素取得 | Qを/Qの/Qから | パース済みHTMLからクエリQに該当するDOMを取得する | DOMようそしゅとく |
| 関数 | DOM子要素検索 | DOMのQを/DOMから | DOMの子要素Qを取得する | DOMこようそけんさく |
| 関数 | DOM子要素全取得 | DOMの/DOMから | DOMの子要素を全部取得する | DOMこようそぜんしゅとく |
| 関数 | DOM親要素取得 | Qを/Qの/Qから | DOMの親要素を取得する | DOMおやようそしゅとく |
| 関数 | DOM次要素取得 | Qを/Qの/Qから | DOMの親要素を取得する | DOMおやようそしゅとく |
| 関数 | DOM抽出 | DOMからQを/DOMの | DOMからクエリQを利用して合致するものを抽出する | DOMちゅうしゅつ |
| 関数 | 属性取得 | DOMからKを/DOMの | DOMの属性Kを取得する | ぞくせいしゅとく |
| 関数 | テキスト取得 | DOMから/DOMの | DOMのテキストを取得する | てきすとしゅとく |
| 関数 | HTML取得 | DOMから/DOMの | DOMのHTMLを取得する | HTMLしゅとく |
| 関数 | HTML設定 | DOMにSを/DOMへ | DOMにSを設定する | HTML設定 |
| 関数 | プロパティ取得 | DOMからPROPを/DOMの | DOMのプロパティPROPを取得する | ぷろぱてぃしゅとく |
| 関数 | 値取得 | DOMから/DOMの | DOMの値を取得する | あたいしゅとく |
| 関数 | 値設定 | DOMにVを/DOMへ | DOMの値vを設定する | あたいせってい |
| 関数 | スタイル取得 | DOMからKを/DOMの | DOMのスタイルKを取得する | すたいるしゅとく |
| 関数 | データ取得 | DOMからKを/DOMの | DOMのデータkを取得する | でーたしゅとく |
| 関数 | DOM配列変換 | DOMから/DOMを | DOMを配列に変換する | DOMはいれつへんかん |
| 関数 | タグ名取得 | DOMから/DOMの | DOMのタグ名を取得する | たぐめいしゅとく |

■plugin_ml(拡張プラグイン)
●機械学習
| 関数 | SVM開 | OPTIONで | 機械学習のアルゴリズムSVMをパラメータOPTIONで開く。 OPTION={type,kernel,gamma,cost} | SVMひらく |
| 関数 | ランダムフォレスト開 | OPTIONで | 機械学習のアルゴリズムRandom ForestをOPTIONで開く。OPTION={seed,maxFeatures,replacement=(true/false),nEstimators} | らんだむふぉれすとひらく |
| 関数 | ランダムフォレスト回帰開 | PARAMSで | 機械学習のアルゴリズムRandom Forestの回帰をパラメータPARAMSで開く | らんだむふぉれすとかいきひらく |
| 関数 | 学習 | INPUTSとLABELSで | 入力配列inputsとラベル配列labelsで機械学習する | がくしゅう |
| 関数 | 予測 | INPUTSを/INPUTSで | 入力配列inputsで予測し機械学習の結果を配列で返す | よそく |
| 関数 | アヤメデータ取得 |  | アヤメデータをJSON形式で取得して返す | あやめでーたしゅとく |
| 関数 | モデル取得 |  | 現在学習済みのモデルを取得する | もでるしゅとく |
| 関数 | モデル設定 | Mを/Mの | 現在学習済みのモデルMを設定する | もでるせってい |
| 関数 | データランダム分割 | DATAとLABELをRATEで | データとラベルの組をRATEで分割して{学習:{データ:[..],ラベル:[..]},テスト:{データ:[..],ラベル:[..]}}の形式で返す | でーたらんだむぶんかつ |
| 関数 | 正解率計算 | TとPの/Pで | 配列T(正解)とP(予測)の正解率を計算して返す | せいかいりつけいさん |

■nadesiko3-drone(拡張プラグイン)
●ドローン
| 定数 | ドローン接続設定 | |  | どろーんせつぞくせってい |
| 関数 | ドローン接続 |  | ドローンに接続する | どろーんせつぞく |
| 関数 | ドローン緊急停止 |  | ドローン緊急停止する | どろーんきんきゅうていし |
| 関数 | ドローン送信 | CMDを/CMDの | コマンドをドローンに送信する | どろーんそうしん |
| 関数 | ドローン接続時 | Fを | ドローンに接続した時にFを実行する | どろーんせつぞくしたとき |
| 関数 | ドローン受信時 | Fを | ドローンからデータを受信した時にFを実行する | どろーんじゅしんしたとき |
| 関数 | ドローン離陸 |  | 離陸コマンドをドローンに送信する | どろーんりりく |
| 関数 | ドローン着陸 |  | 着陸コマンドをドローンに送信する | どろーんちゃくりく |
| 関数 | ドローン移動 | DIRにNだけ/DIRへ | ドローンを方向(上下左右前後)にN(20-500cm)だけ動かす | どろーんいどう |
| 関数 | ドローン回転 | Nだけ | ドローンをN(1から360/-1から-360)度だけ右回転させる | どろーんかいてん |
| 関数 | ドローン速度設定 | Nに/Nへ | ドローンの速度をN(10-100)に設定 | どろーんそくどせってい |
| 関数 | ドローンWIFI設定 | SSIDのPASSに/PASSへ | ドローンのWi-FiをSSIDのPASSに設定 | どろーんWIFIせってい |


■plugin_system
●システム定数
| 定数 | ナデシコバージョン | | '?' | なでしこばーじょん |
| 定数 | ナデシコエンジン | | 'nadesi.com/v3' | なでしこえんじん |
| 定数 | ナデシコ種類 | | 'wnako3/cnako3' | なでしこしゅるい |
| 定数 | はい | | 1 | はい |
| 定数 | いいえ | | 0 | いいえ |
| 定数 | オン | | 1 | おん |
| 定数 | オフ | | 0 | おふ |
| 定数 | 改行 | | '\n' | かいぎょう |
| 定数 | タブ | | '\t' | たぶ |
| 定数 | カッコ | | '「' | かっこ |
| 定数 | カッコ閉 | | '」' | かっことじ |
| 定数 | 波カッコ | | '{' | なみかっこ |
| 定数 | 波カッコ閉 | | '}' | なみかっことじ |
| 定数 | OK | | 1 | OK |
| 定数 | NG | | 0 | NG |
| 定数 | PI | | Math.PI | PI |
| 定数 | 空 | | '' | から |
| 定数 | NULL | | null | NULL |
| 定数 | undefined | | undefined | undefined |
| 定数 | 未定義 | | undefined | みていぎ |
| 定数 | エラーメッセージ | | '' | えらーめっせーじ |
| 定数 | 対象 | | '' | たいしょう |
| 定数 | 対象キー | | '' | たいしょうきー |
| 定数 | 回数 | | '' | かいすう |
| 定数 | CR | | '\r' | CR |
| 定数 | LF | | '\n' | LF |
空配列
| 関数 | 空配列 |  | 空の配列を返す | からはいれつ
空ハッシュ
| 関数 | 空ハッシュ |  | 空のハッシュを返す | からはっしゅ
空オブジェクト
| 関数 | 空オブジェクト |  | 空のオブジェクトを返す | からおぶじぇくと
●標準出力
表示
| 関数 | 表示 | Sを/Sと | Sを表示 | ひょうじ
| 定数 | 表示ログ | | '' | ひょうじろぐ |
表示ログクリア
| 関数 | 表示ログクリア |  | 表示ログを空にする | ひょうじろぐくりあ
言
| 関数 | 言 | Sを/Sと | Sを表示 | いう
コンソール表示
| 関数 | コンソール表示 | Sを/Sと | Sをコンソール表示する(console.log) | こんそーるひょうじ
●四則演算
足
| 関数 | 足 | Bを...Aに/...Aと | AとBを足す(可変引数) | たす
引
| 関数 | 引 | AからBを | AからBを引く | ひく
掛
| 関数 | 掛 | AにBを/Aと | AにBを掛ける | かける
倍
| 関数 | 倍 | AのB | AのB倍を求める | ばい
割
| 関数 | 割 | AをBで | AをBで割る | わる
割余
| 関数 | 割余 | AをBで | AをBで割った余りを求める | わったあまり
以上
| 関数 | 以上 | AがB | AがB以上か | いじょう
以下
| 関数 | 以下 | AがB | AがB以下か | いか
未満
| 関数 | 未満 | AがB | AがB未満か | みまん
超
| 関数 | 超 | AがB | AがB超か | ちょう
等
| 関数 | 等 | AがBと | AがBと等しいか | ひとしい
範囲内
| 関数 | 範囲内 | VがAからBの | VがAからBの範囲内か | はんいない
●特殊命令
JS実行
| 関数 | JS実行 | SRCを/SRCで | JavaScriptのコードSRCを実行する(変数sysでなでしこシステムを参照できる) | JSじっこう
JSオブジェクト取得
| 関数 | JSオブジェクト取得 | NAMEの | なでしこで定義した関数や変数nameのJavaScriptオブジェクトを取得する | JSおぶじぇくとしゅとく
JS関数実行
| 関数 | JS関数実行 | NAMEをARGSで | JavaScriptの関数NAMEを引数ARGS(配列)で実行する | JSかんすうしゅとく
ナデシコ
| 関数 | ナデシコ | CODEを/CODEで | なでしこのコードCODEを実行する | なでしこする
ナデシコ続
| 関数 | ナデシコ続 | CODEを/CODEで | なでしこのコードCODEを実行する | なでしこつづける
実行
| 関数 | 実行 | Fを/Fに/Fで | 無名関数（あるいは、文字列で関数名を指定）Fを実行する(Fが関数でなければ無視する) | じっこう
●型変換
変数型確認
| 関数 | 変数型確認 | Vの | 変数Vの型を返す | へんすうかたかくにん
TYPEOF
| 関数 | TYPEOF | Vの | 変数Vの型を返す | TYPEOF
文字列変換
| 関数 | 文字列変換 | Vを | 値Vを文字列に変換 | もじれつへんかん
TOSTR
| 関数 | TOSTR | Vを | 値Vを文字列に変換 | とぅーすとりんぐ
整数変換
| 関数 | 整数変換 | Vを | 値Vを整数に変換 | せいすうへんかん
TOINT
| 関数 | TOINT | Vを | 値Vを整数に変換 | TOINT
実数変換
| 関数 | 実数変換 | Vを | 値Vを実数に変換 | じっすうへんかん
TOFLOAT
| 関数 | TOFLOAT | Vを | 値Vを実数に変換 | TOFLOAT
INT
| 関数 | INT | Vの | 値Vを整数に変換 | INT
FLOAT
| 関数 | FLOAT | Vの | 値Vを実数に変換 | FLOAT
NAN判定
| 関数 | NAN判定 | Vを | 値VがNaNかどうかを判定 | NANはんてい
HEX
| 関数 | HEX | Aの | 値Vを16進数に変換 | HEX
RGB
| 関数 | RGB | RとGのBで | HTML用のカラーコードを返すRGB(R,G,B)で各値は0-255 | RGB
●論理演算
論理OR
| 関数 | 論理OR | AとBの | (ビット演算で)AとBの論理和を返す(v1非互換)。 | 論理OR
論理AND
| 関数 | 論理AND | AとBの | (ビット演算で)AとBの論理積を返す(v1非互換)。日本語の「AかつB」に相当する | 論理AND
論理NOT
| 関数 | 論理NOT | Vの | 値Vが0ならば1、それ以外ならば0を返す(v1非互換) | 論理NOT
●ビット演算
OR
| 関数 | OR | AとBの | (ビット演算で)AとBの論理和を返す。 | OR
AND
| 関数 | AND | AとBの | (ビット演算で)AとBの論理積を返す。日本語の「AかつB」に相当する | AND
XOR
| 関数 | XOR | AとBの | (ビット演算で)AとBの排他的論理和を返す。 | XOR
NOT
| 関数 | NOT | Vの | (ビット演算で)vの各ビットを反転して返す。 | NOT
SHIFT_L
| 関数 | SHIFT_L | AをBで | VをAビット左へシフトして返す | SHIFT_L
SHIFT_R
| 関数 | SHIFT_R | AをBで | VをAビット右へシフトして返す(符号を維持する) | SHIFT_R
SHIFT_UR
| 関数 | SHIFT_UR | AをBで | VをAビット右へシフトして返す(符号を維持しない、0で埋める) | SHIFT_UR
●文字列処理
文字数
| 関数 | 文字数 | Vの | 文字列Vの文字数を返す | もじすう
何文字目
| 関数 | 何文字目 | SでAが/Sの | 文字列SでAが何文字目にあるか調べて返す | なんもじめ
CHR
| 関数 | CHR | Vの | 文字コードから文字を返す | CHR
ASC
| 関数 | ASC | Vの | 文字列Vの最初の文字の文字コードを返す | ASC
文字挿入
| 関数 | 文字挿入 | SでIにAを/SのIへ | 文字列SのI文字目に文字列Aを挿入する | もじそうにゅう
文字検索
| 関数 | 文字検索 | SでAからBを/Sの | 文字列Sで文字列A文字目からBを検索。見つからなければ0を返す。(類似命令に『何文字目』がある)(v1非互換) | もじけんさく
追加
| 関数 | 追加 | SでAを/Sに/Sへ | 文字列SにAを追加して返す(v1非互換) | ついか
一行追加
| 関数 | 一行追加 | SでAを/Sに/Sへ | 文字列SにAと改行を追加して返す(v1非互換) | いちぎょうついか
文字列分解
| 関数 | 文字列分解 | Vを/Vの/Vで | 文字列Vを一文字ずつに分解して返す | もじれつぶんかい
リフレイン
| 関数 | リフレイン | VをCNTで/Vの | 文字列VをCNT回繰り返す(v1非互換) | りふれいん
出現回数
| 関数 | 出現回数 | SでAの | 文字列SにAが何回出現するか数える | しゅつげんかいすう
MID
| 関数 | MID | SでAからCNTを/Sの | 文字列SのA文字目からCNT文字を抽出する | MID
文字抜出
| 関数 | 文字抜出 | SでAからCNTを/SのCNT | 文字列SのA文字目からCNT文字を抽出する | もじぬきだす
LEFT
| 関数 | LEFT | SのCNTだけ/Sで | 文字列Sの左端からCNT文字を抽出する | LEFT
文字左部分
| 関数 | 文字左部分 | SのCNTだけ/SでCNT | 文字列Sの左端からCNT文字を抽出する | もじひだりぶぶん
RIGHT
| 関数 | RIGHT | SのCNTだけ/Sで | 文字列Sの右端からCNT文字を抽出する | RIGHT
文字右部分
| 関数 | 文字右部分 | SのCNTだけ/SでCNT | 文字列Sの右端からCNT文字を抽出する | もじみぎぶぶん
区切
| 関数 | 区切 | SのAで/Sを | 文字列Sを区切り文字Aで区切って配列で返す | くぎる
切取
| 関数 | 切取 | SからAまで/SのAを | 文字列Sから文字列Aまでの部分を抽出する(v1非互換) | きりとる
文字削除
| 関数 | 文字削除 | SのAからBだけ/Bを/B | 文字列SのA文字目からB文字分を削除して返す | もじさくじょ
●置換・トリム
置換
| 関数 | 置換 | SのAをBに/SでAからBへ | 文字列Sのうち文字列AをBに全部置換して返す | ちかん
単置換
| 関数 | 単置換 | SのAをBに/SでBへ | 文字列Sのうち、最初に出現するAだけをBに置換して返す | たんちかん
トリム
| 関数 | トリム | Sの/Sを | 文字列Sの前後にある空白を削除する | とりむ
空白除去
| 関数 | 空白除去 | Sの/Sを | 文字列Sの前後にある空白を削除する | くうはくじょきょ
●文字変換
大文字変換
| 関数 | 大文字変換 | Sの/Sを | アルファベットの文字列Sを大文字に変換 | おおもじへんかん
小文字変換
| 関数 | 小文字変換 | Sの/Sを | アルファベットの文字列Sを小文字に変換 | こもじへんかん
平仮名変換
| 関数 | 平仮名変換 | Sの/Sを | 文字列Sのカタカナをひらがなに変換 | ひらがなへんかん
カタカナ変換
| 関数 | カタカナ変換 | Sの/Sを | 文字列Sのひらがなをカタカナに変換 | かたかなへんかん
英数全角変換
| 関数 | 英数全角変換 | Sの/Sを | 文字列Sの半角英数文字を全角に変換 | えいすうぜんかくへんかん
英数半角変換
| 関数 | 英数半角変換 | Sの/Sを | 文字列Sの全角英数文字を半角に変換 | えいすうはんかくへんかん
英数記号全角変換
| 関数 | 英数記号全角変換 | Sの/Sを | 文字列Sの半角英数記号文字を全角に変換 | えいすうきごうぜんかくへんかん
英数記号半角変換
| 関数 | 英数記号半角変換 | Sの/Sを | 文字列Sの記号文字を半角に変換 | えいすうきごうはんかくへんかん
カタカナ全角変換
| 関数 | カタカナ全角変換 | Sの/Sを | 文字列Sの半角カタカナを全角に変換 | かたかなぜんかくへんかん
カタカナ半角変換
| 関数 | カタカナ半角変換 | Sの/Sを | 文字列Sの全角カタカナを半角に変換 | かたかなはんかくへんかん
全角変換
| 関数 | 全角変換 | Sの/Sを | 文字列Sの半角文字を全角に変換 | ぜんかくへんかん
半角変換
| 関数 | 半角変換 | Sの/Sを | 文字列Sの全角文字を半角に変換 | はんかくへんかん
| 定数 | 全角カナ一覧 | | 'アイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヲンァィゥェォャュョッ、。ー「」' | ぜんかくかないちらん |
| 定数 | 全角カナ濁音一覧 | | 'ガギグゲゴザジズゼゾダヂヅデドバビブベボパピプペポ' | ぜんかくかなだくおんいちらん |
| 定数 | 半角カナ一覧 | | 'ｱｲｳｴｵｶｷｸｹｺｻｼｽｾｿﾀﾁﾂﾃﾄﾅﾆﾇﾈﾉﾊﾋﾌﾍﾎﾏﾐﾑﾒﾓﾔﾕﾖﾗﾘﾙﾚﾛﾜｦﾝｧｨｩｪｫｬｭｮｯ､｡ｰ｢｣ﾞﾟ' | はんかくかないちらん |
| 定数 | 半角カナ濁音一覧 | | 'ｶﾞｷﾞｸﾞｹﾞｺﾞｻﾞｼﾞｽﾞｾﾞｿﾞﾀﾞﾁﾞﾂﾞﾃﾞﾄﾞﾊﾞﾋﾞﾌﾞﾍﾞﾎﾞﾊﾟﾋﾟﾌﾟﾍﾟﾎﾟ' | はんかくかなだくおんいちらん |
●JSON
JSONエンコード
| 関数 | JSONエンコード | Vを/Vの | オブジェクトVをJSON形式にエンコードして返す | JSONえんこーど
JSONエンコード整形
| 関数 | JSONエンコード整形 | Vを/Vの | オブジェクトVをJSON形式にエンコードして整形して返す | JSONえんこーどせいけい
JSONデコード
| 関数 | JSONデコード | Sを/Sの/Sから | JSON文字列Sをオブジェクトにデコードして返す | JSONでこーど
●正規表現
正規表現マッチ
| 関数 | 正規表現マッチ | AをBで/AがBに | 文字列Aを正規表現パターンBでマッチして結果を返す(パターンBは「/pat/opt」の形式で指定。optにgの指定がなければ部分マッチが『抽出文字列』に入る) | せいきひょうげんまっち
| 定数 | 抽出文字列 | | [] | ちゅうしゅつもじれつ |
正規表現置換
| 関数 | 正規表現置換 | SのAをBで/AからBに/Bへ | 文字列Sの正規表現パターンAをBに置換して結果を返す(パターンAは/pat/optで指定) | せいきひょうげんちかん
正規表現区切
| 関数 | 正規表現区切 | SをAで | 文字列Sを正規表現パターンAで区切って配列で返す(パターンAは/pat/optで指定) | せいきひょうげんくぎる
●指定形式
通貨形式
| 関数 | 通貨形式 | Vを/Vの | 数値Vを三桁ごとにカンマで区切る | つうかけいしき
ゼロ埋
| 関数 | ゼロ埋 | VをAで | 数値VをA桁の0で埋める | ぜろうめ
ゼロ埋
| 関数 | ゼロ埋 | VをAで | 数値VをA桁の0で埋める | ぜろうめ
●文字種類
かなか判定
| 関数 | かなか判定 | Sを/Sの/Sが | 文字列Sの1文字目がひらがなか判定 | かなかはんてい
カタカナ判定
| 関数 | カタカナ判定 | Sを/Sの/Sが | 文字列Sの1文字目がカタカナか判定 | かたかなかはんてい
数字判定
| 関数 | 数字判定 | Sを/Sが | 文字列Sの1文字目が数字か判定 | すうじかはんてい
数列判定
| 関数 | 数列判定 | Sを/Sが | 文字列S全部が数字か判定 | すうれつかはんてい
●配列操作
配列結合
| 関数 | 配列結合 | AをSで | 配列Aを文字列Sでつなげて文字列で返す | はいれつけつごう
配列検索
| 関数 | 配列検索 | AのSを/Aから | 配列Aから文字列Sを探してインデックス番号(0起点)を返す。見つからなければ-1を返す。 | はいれつけんさく
配列要素数
| 関数 | 配列要素数 | Aの | 配列Aの要素数を返す | はいれつようそすう
要素数
| 関数 | 要素数 | Aの | 配列Aの要素数を返す | ようそすう
配列挿入
| 関数 | 配列挿入 | AのIにSを/Iへ | 配列AのI番目(0起点)に要素Sを追加して返す(v1非互換) | はいれつそうにゅう
配列一括挿入
| 関数 | 配列一括挿入 | AのIにBを/Iへ | 配列AのI番目(0起点)に配列bを追加して返す(v1非互換) | はいれついっかつそうにゅう
配列ソート
| 関数 | 配列ソート | Aの/Aを | 配列Aをソートして返す(A自体を変更) | はいれつそーと
配列数値ソート
| 関数 | 配列数値ソート | Aの/Aを | 配列Aをソートして返す(A自体を変更) | はいれつすうちそーと
配列カスタムソート
| 関数 | 配列カスタムソート | FでAの/Aを | 関数Fで配列Aをソートして返す(引数A自体を変更) | はいれつかすたむそーと
配列逆順
| 関数 | 配列逆順 | Aの/Aを | 配列Aを逆にして返す。Aを書き換える(A自体を変更)。 | はいれつぎゃくじゅん
配列シャッフル
| 関数 | 配列シャッフル | Aの/Aを | 配列Aをシャッフルして返す。Aを書き換える | はいれつしゃっふる
配列切取
| 関数 | 配列切取 | AのIを | 配列AのI番目(0起点)の要素を切り取って返す。Aの内容を書き換える。 | はいれつきりとる
配列取出
| 関数 | 配列取出 | AのIからCNTを | 配列AのI番目(0起点)からCNT個の要素を取り出して返す。Aの内容を書き換える | はいれつとりだし
配列ポップ
| 関数 | 配列ポップ | Aの/Aから | 配列Aの末尾を取り出して返す。Aの内容を書き換える。 | はいれつぽっぷ
配列追加
| 関数 | 配列追加 | AにBを/Aへ | 配列Aの末尾にBを追加して返す。Aの内容を書き換える。 | はいれつついか
配列複製
| 関数 | 配列複製 | Aを | 配列Aを複製して返す。 | はいれつふくせい
配列足
| 関数 | 配列足 | AにBを/Aへ/Aと | 配列Aに配列Bを足し合わせて返す。 | はいれつたす
配列最大値
| 関数 | 配列最大値 | Aの | 配列Aの値の最大値を調べて返す。 | はいれつさいだいち
配列最小値
| 関数 | 配列最小値 | Aの | 配列Aの値の最小値を調べて返す。 | はいれつさいしょうち
●二次元配列処理
表ソート
| 関数 | 表ソート | AのNOを | 二次元配列AでB列目(0起点)(あるいはキー名)をキーに文字列順にソートする。Aの内容を書き換える。 | ひょうそーと
●二次元配列処理
表数値ソート
| 関数 | 表数値ソート | AのNOを | 二次元配列AでB列目(0起点)(あるいはキー名)をキーに数値順にソートする。Aの内容を書き換える。 | ひょうすうちそーと
表ピックアップ
| 関数 | 表ピックアップ | AのNOからSを/Sで | 配列Aの列番号B(0起点)(あるいはキー名)で検索文字列Sを含む行を返す | ひょうぴっくあっぷ
表完全一致ピックアップ
| 関数 | 表完全一致ピックアップ | AのNOからSを/Sで | 配列Aの列番号B(0起点)(あるいはキー名)で検索文字列Sと一致する行を返す | ひょうぴっくあっぷ
表検索
| 関数 | 表検索 | AのCOLでROWからSを/COLに | 二次元配列AでCOL列目(0起点)からキーSを含む行をROW行目から検索して何行目にあるか返す。見つからなければ-1を返す。 | ひょうけんさく
表列数
| 関数 | 表列数 | Aの | 二次元配列Aの列数を調べて返す。 | ひょうれつすう
表行数
| 関数 | 表行数 | Aの | 二次元配列Aの行数を調べて返す。 | ひょうぎょうすう
表行列交換
| 関数 | 表行列交換 | Aの/Aを | 二次元配列Aの行と列を交換して返す。 | ひょうぎょうれつこうかん
表右回転
| 関数 | 表右回転 | Aの/Aを | 二次元配列Aを90度回転して返す。 | ひょうみぎかいてん
表重複削除
| 関数 | 表重複削除 | AのIを/Iで | 二次元配列AのI列目にある重複項目を削除して返す。 | ひょうじゅうふくさくじょ
表列取得
| 関数 | 表列取得 | AのIを | 二次元配列AのI列目を返す。 | ひょうれつしゅとく
表列挿入
| 関数 | 表列挿入 | AのIにSを/Iへ | 二次元配列Aの(0から数えて)I列目に配列Sを挿入して返す | ひょうれつそうにゅう
表列削除
| 関数 | 表列削除 | AのIを | 二次元配列Aの(0から数えて)I列目削除して返す | ひょうれつそうにゅう
表列合計
| 関数 | 表列合計 | AのIを/Iで | 二次元配列Aの(0から数えて)I列目を合計して返す。 | ひょうれつごうけい
表曖昧検索
| 関数 | 表曖昧検索 | AのROWからCOLでSを | 二次元配列AのROW行目からCOL列目(0起点)で正規表現Sにマッチする行を検索して何行目にあるか返す。見つからなければ-1を返す。(v1非互換) | ひょうれつあいまいけんさく
表正規表現ピックアップ
| 関数 | 表正規表現ピックアップ | AのCOLからSを/Aで | 二次元配列AでI列目(0起点)から正規表現パターンSにマッチする行をピックアップして返す。 | ひょうせいきひょうげんぴっくあっぷ
●ハッシュ
ハッシュキー列挙
| 関数 | ハッシュキー列挙 | Aの | ハッシュAのキー一覧を配列で返す。 | はっしゅきーれっきょ
ハッシュ内容列挙
| 関数 | ハッシュ内容列挙 | Aの | ハッシュAの内容一覧を配列で返す。 | はっしゅないようれっきょ
ハッシュキー削除
| 関数 | ハッシュキー削除 | AからKEYを/Aの | ハッシュAからキーKEYを削除して返す。 | はっしゅきーさくじょ
ハッシュキー存在
| 関数 | ハッシュキー存在 | AのKEYが/Aに | ハッシュAのキーKEYが存在するか確認 | はっしゅきーそんざい
●タイマー
秒待機
| 関数 | 秒待機 | N | 逐次実行構文にて、N秒の間待機する | びょうたいき
秒後
| 関数 | 秒後 | FをN | 無名関数（あるいは、文字列で関数名を指定）FをN秒後に実行する | びょうご
秒毎
| 関数 | 秒毎 | FをN | 無名関数（あるいは、文字列で関数名を指定）FをN秒ごとに実行する(『タイマー停止』で停止できる) | びょうごと
秒タイマー開始時
| 関数 | 秒タイマー開始時 | FをN | 無名関数（あるいは、文字列で関数名を指定）FをN秒ごとに実行する(『秒毎』と同じ) | びょうたいまーかいししたとき
タイマー停止
| 関数 | タイマー停止 | TIMERIDの/TIMERIDで | 『秒毎』や『秒タイマー開始』で開始したタイマーを停止する | たいまーていし
●日時処理(簡易)
今
| 関数 | 今 |  | 現在時刻を「HH:mm:ss」の形式で返す | いま
システム時間
| 関数 | システム時間 |  | 現在のUNIX時間 (UTC(1970/1/1)からの経過秒数) を返す | しすてむじかん
今日
| 関数 | 今日 |  | 今日の日付を「YYYY/MM/DD」の形式で返す | きょう
曜日番号取得
| 関数 | 曜日番号取得 | Sの | Sに指定した日付の曜日番号をで返す。不正な日付の場合は今日の曜日番号を返す。(0=日/1=月/2=火/3=水/4=木/5=金/6=土) | ようびばんごうしゅとく
●デバッグ支援
エラー発生
| 関数 | エラー発生 | Sの/Sで | 故意にエラーSを発生させる | えらーはっせい
システム関数一覧取得
| 関数 | システム関数一覧取得 |  | システム関数の一覧を取得 | しすてむかんすういちらんしゅとく
システム関数存在
| 関数 | システム関数存在 | FNAMEが/FNAMEの | 文字列で関数名を指定してシステム関数が存在するかを調べる | しすてむかんすうそんざい
プラグイン一覧取得
| 関数 | プラグイン一覧取得 |  | 利用中のプラグイン一覧を得る | ぷらぐいんいちらんしゅとく
モジュール一覧取得
| 関数 | モジュール一覧取得 |  | 取り込んだモジュール一覧を得る | もじゅーるいちらんしゅとく
●URLエンコードとパラメータ
URLエンコード
| 関数 | URLエンコード | TEXTを/TEXTから | URLエンコードして返す | URLえんこーど
URLデコード
| 関数 | URLデコード | TEXTを/TEXTへ/TEXTに | URLデコードして返す | URLでこーど
URLパラメータ解析
| 関数 | URLパラメータ解析 | URLを/URLの/URLから | URLパラメータを解析してハッシュで返す | URLぱらめーたかいせき

■plugin_browser
●色定数
| 定数 | 水色 | | 'aqua' | みずいろ |
| 定数 | 紫色 | | 'fuchsia' | むらさきいろ |
| 定数 | 緑色 | | 'lime' | みどりいろ |
| 定数 | 青色 | | 'blue' | あおいろ |
| 定数 | 赤色 | | 'red' | あかいろ |
| 定数 | 黄色 | | 'yellow' | きいろ |
| 定数 | 黒色 | | 'black' | くろいろ |
| 定数 | 白色 | | 'white' | しろいろ |
| 定数 | 茶色 | | 'maroon' | ちゃいろ |
| 定数 | 灰色 | | 'gray' | はいいろ |
| 定数 | 金色 | | 'gold' | きんいろ |
| 定数 | 黄金色 | | 'gold' | こがねいろ |
| 定数 | 銀色 | | 'silver' | ぎんいろ |
| 定数 | 白金色 | | 'silver' | しろがねいろ |
| 定数 | オリーブ色 | | 'olive' | おりーぶいろ |
| 定数 | ベージュ色 | | 'beige' | べーじゅいろ |
| 定数 | アリスブルー色 | | 'aliceblue' | ありすぶるーいろ |
RGB
| 関数 | RGB | RとGとBで/Bの | 赤緑青を256段階でそれぞれ指定して、#RRGGBB形式の値を返す | RGB
色混
| 関数 | 色混 | Aの | 配列で[RR,GG,BB]を指定して色を混ぜて#RRGGBB形式の値を返す | いろまぜる
●システム
終
| 関数 | 終 |  | ブラウザでプログラムの実行を強制終了する | おわる
●ダイアログ
言
| 関数 | 言 | Sと/Sを | メッセージダイアログにSを表示 | いう
尋
| 関数 | 尋 | Sと/Sを | メッセージSと入力ボックスを出して尋ねる | たずねる
文字尋
| 関数 | 文字尋 | Sと/Sを | メッセージSと入力ボックスを出して尋ねる。返り値は常に入力されたままの文字列となる | もじたずねる
二択
| 関数 | 二択 | Sで/Sの/Sと/Sを | メッセージSと[OK]と[キャンセル]のダイアログを出して尋ねる | にたく
●ブラウザ操作
ブラウザ移動
| 関数 | ブラウザ移動 | URLに/URLへ | 任意のURLにブラウザ移動(ただし移動後スクリプトの実行は停止する) | ぶらうざいどう
ブラウザ戻
| 関数 | ブラウザ戻 |  | 任意のURLにブラウザ移動(ただし移動後スクリプトの実行は停止する) | ぶらうざもどる
●AJAXとHTTP
AJAX送信時
| 関数 | AJAX送信時 | CALLBACKのURLまで/URLへ/URLに | 非同期通信(Ajax)でURLにデータを送信し、成功するとcallbackが実行される。その際『対象』にデータが代入される。 | AJAXそうしんしたとき
GET送信時
| 関数 | GET送信時 | CALLBACKのURLまで/URLへ/URLに | 非同期通信(Ajax)でURLにデータを送信し、成功するとcallbackが実行される。その際『対象』にデータが代入される。 | GETそうしんしたとき
POSTデータ生成
| 関数 | POSTデータ生成 | PARAMSの/PARAMSを | 連想配列をkey=value&key=value...の形式に変換する | POSTでーたせいせい
POST送信時
| 関数 | POST送信時 | CALLBACKのURLまでPARAMSを/URLへ/URLに | AjaxでURLにPARAMSをPOST送信し『対象』にデータを設定 | POSTそうしんしたとき
POSTフォーム送信時
| 関数 | POSTフォーム送信時 | CALLBACKのURLまでPARAMSを/URLへ/URLに | AjaxでURLにPARAMSをフォームとしてPOST送信し『対象』にデータを設定 | POSTふぉーむそうしんしたとき
AJAX失敗時
| 関数 | AJAX失敗時 | CALLBACKの | Ajax命令でエラーが起きたとき | AJAXえらーしっぱいしたとき
| 定数 | AJAXオプション | | '' | AJAXおぷしょん |
AJAXオプション設定
| 関数 | AJAXオプション設定 | OPTIONに/OPTIONへ/OPTIONと | Ajax命令でオプションを設定 | AJAXおぷしょんせってい
AJAX送信
| 関数 | AJAX送信 | URLまで/URLへ/URLに | 逐次実行構文にて、非同期通信(Ajax)でURLにデータを送信する。成功すると『対象』にデータが代入される。失敗すると『AJAX失敗時』を実行。 | AJAXそうしんした
HTTP取得
| 関数 | HTTP取得 | URLの/URLから/URLを | 逐次実行構文にて、非同期通信(Ajax)でURLにデータを送信する。成功すると『対象』にデータが代入される。失敗すると『AJAX失敗時』を実行。 | HTTPしゅとく
POST送信
| 関数 | POST送信 | URLまでPARAMSを/URLへ/URLに | 逐次実行構文にて、AjaxでURLにPARAMSをPOST送信し『対象』にデータを設定。失敗すると『AJAX失敗時』を実行。 | POSTそうしん
POSTフォーム送信
| 関数 | POSTフォーム送信 | URLまでPARAMSを/URLへ/URLに | AjaxでURLにPARAMSをフォームとしてPOST送信し『対象』にデータを設定。失敗すると『AJAX失敗時』を実行。 | POSTふぉーむそうしん
●DOM操作
| 定数 | DOCUMENT | | '' | DOCUMENT |
| 定数 | WINDOW | | '' | WINDOW |
| 定数 | NAVIGATOR | | '' | NAVIGATOR |
DOM要素ID取得
| 関数 | DOM要素ID取得 | IDの/IDを | DOMの要素をIDを指定して取得 | DOMようそIDしゅとく
DOM要素取得
| 関数 | DOM要素取得 | Qの/Qを | DOMの要素をクエリqで取得して返す | DOMようそしゅとく
DOM要素全取得
| 関数 | DOM要素全取得 | Qの/Qを | DOMの要素をクエリqで全部取得して返す | DOMようそぜんしゅとく
タグ一覧取得
| 関数 | タグ一覧取得 | TAGの/TAGを | 任意のタグの一覧を取得して返す | たぐいちらんしゅとく
DOMイベント設定
| 関数 | DOMイベント設定 | DOMのEVENTにFUNCSTRを/EVENTへ | DOMのEVENTになでしこ関数名funcStrのイベントを設定 | DOMいべんとせってい
DOMテキスト設定
| 関数 | DOMテキスト設定 | DOMにTEXTを/DOMの/DOMへ | DOMにテキストを設定 | DOMてきすとせってい
DOMテキスト取得
| 関数 | DOMテキスト取得 | DOMの/DOMから | DOMのテキストを取得 | DOMてきすとしゅとく
DOM_HTML設定
| 関数 | DOM_HTML設定 | DOMにTEXTを/DOMの/DOMへ | DOMにHTML文字列を設定 | DOM_HTMLせってい
DOM_HTML取得
| 関数 | DOM_HTML取得 | DOMの/DOMから | DOMのHTML文字列を取得 | DOM_HTMLしゅとく
テキスト設定
| 関数 | テキスト設定 | DOMにVを/DOMの/DOMへ | DOMのテキストにVを設定 | てきすとせってい
テキスト取得
| 関数 | テキスト取得 | DOMの/DOMから | DOMのテキストを取得 | てきすとしゅとく
HTML設定
| 関数 | HTML設定 | DOMにVを/DOMの/DOMへ | DOMのHTMLにVを設定 | HTMLせってい
HTML取得
| 関数 | HTML取得 | DOMの/DOMから | DOMのテキストを取得 | HTMLしゅとく
DOM属性設定
| 関数 | DOM属性設定 | DOMのSにVを/Sへ | DOMの属性Sに値Vを設定 | DOMぞくせいせってい
DOM属性取得
| 関数 | DOM属性取得 | DOMのSを/DOMから | DOMの属性Sを取得 | DOMぞくせいしゅとく
DOMスタイル設定
| 関数 | DOMスタイル設定 | DOMのSにVを/Sへ | DOMのスタイルAに値Bを設定 | DOMすたいるせってい
DOMスタイル一括設定
| 関数 | DOMスタイル一括設定 | DOMにVALUESを/DOMへ | DOMに(オブジェクト型で)スタイル情報を一括設定 | DOMすたいるいっかつせってい
DOMスタイル取得
| 関数 | DOMスタイル取得 | DOMのSTYLEを | DOMのSTYLEの値を取得 | DOMすたいるしゅとく
DOMスタイル一括取得
| 関数 | DOMスタイル一括取得 | DOMのSTYLEを | DOMのSTYLE(配列で複数指定)の値を取得 | DOMすたいるいっかつしゅとく
DOM要素作成
| 関数 | DOM要素作成 | TAGの/TAGを | DOMにTAGの新規要素を作成 | DOMようそさくせい
DOM子要素追加
| 関数 | DOM子要素追加 | PAにELを/PAへ | DOMの要素PAの子へ要素ELを追加してPAを返す | DOMこようそついか
DOM子要素削除
| 関数 | DOM子要素削除 | PAからELを | DOMの要素PAの子から要素ELを削除してPAを返す | DOMこようそさくじょ
●DOM操作/イベント
DOMイベント追加
| 関数 | DOMイベント追加 | DOMのEVENTにFUNCSTRを/EVENTへ | DOMのEVENTになでしこ関数名funcStrのイベントを追加 | DOMいべんとついか
DOMイベント削除
| 関数 | DOMイベント削除 | DOMのEVENTからFUNCSTRを | DOMのEVENTからなでしこ関数名funcStrのイベントを削除 | DOMいべんとさくじょ
DOMイベント発火時
| 関数 | DOMイベント発火時 | CALLBACKでDOMのEVENTが | DOMのEVENTが発火した時にCALLBACKを実行するように設定 | DOMいべんとはっかしたとき
| 定数 | 対象イベント | | '' | たいしょういべんと |
DOMイベント処理停止
| 関数 | DOMイベント処理停止 | EVENTを/EVENTの | キーイベントやマウスイベントで、元々ブラウザが行う処理を中止する | DOMいべんとしょりていし
クリック時
| 関数 | クリック時 | FUNCでDOMを | 無名関数FでDOMをクリックした時に実行するイベントを設定 | くりっくしたとき
読込時
| 関数 | 読込時 | FUNCでDOMを | 無名関数FでDOMを読み込んだ時に実行するイベントを設定 | よみこんだとき
フォーム送信時
| 関数 | フォーム送信時 | FUNCでDOMを/DOMの | 無名関数Fでフォームを送信した時に実行するイベントを設定 | ふぉーむそうしんしたとき
| 定数 | 押キー | | '' | おされたきー |
キー押時
| 関数 | キー押時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してキーを押した時に実行するイベントを設定。『押されたキー』が設定される。 | きーおしたとき
キー離時
| 関数 | キー離時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してキーを離した時に実行するイベントを設定。『押されたキー』が設定される。 | きーはなしたとき
キータイピング時
| 関数 | キータイピング時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してキーをプレスした時に実行するイベントを設定。『押されたキー』が設定される。 | きーたいぴんぐしたとき
| 定数 | マウスX | | 0 | まうすX |
| 定数 | マウスY | | 0 | まうすY |
マウス押時
| 関数 | マウス押時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してマウスボタンを押した時に実行するイベントを設定。『マウスX』『マウスY』に座標が設定される。『対象』にイベントDOM。『対象イベント』にイベント引数。 | まうすおしたとき
マウス移動時
| 関数 | マウス移動時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してマウスカーソルが移動した時に実行するイベントを設定。『マウスX』『マウスY』に座標が設定される。『対象』にイベントDOM。『対象イベント』にイベント引数。 | まうすいどうしたとき
マウス離時
| 関数 | マウス離時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してマウスボタンを離した時に実行するイベントを設定。『マウスX』『マウスY』に座標が設定される。『対象』にイベントDOM。『対象イベント』にイベント引数。 | まうすはなしたとき
| 定数 | タッチX | | 0 | たっちX |
| 定数 | タッチY | | 0 | たっちY |
| 定数 | タッチ配列 | | [] | たっちはいれつ |
タッチイベント計算
| 関数 | タッチイベント計算 | Eの | タッチイベントで座標計算を行う。『タッチX』『タッチY』『対象』『対象イベント』が設定される。 | たっちいべんとけいさん
タッチ開始時
| 関数 | タッチ開始時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してタッチを開始した時に実行するイベントを設定。 | たっちかいししたとき
タッチ時
| 関数 | タッチ時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してタッチして指を動かした時に実行するイベントを設定。 | たっちしたとき
タッチ終了時
| 関数 | タッチ終了時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してタッチして指を離した時のイベントを設定。 | たっちしゅうりょうしたとき
タッチキャンセル時
| 関数 | タッチキャンセル時 | FUNCでDOMを/DOMの | 無名関数FでDOMに対してタッチイベントをキャンセルした時の動作を設定。 | たっちきゃんせるしたとき
●DOM部品操作
| 定数 | DOM親要素 | | '' | DOMおやようそ |
| 定数 | DOM生成個数 | | 0 | DOMせいせいこすう |
DOM親要素設定
| 関数 | DOM親要素設定 | ELに/ELへ | 「ボタン作成」「エディタ作成」などのDOM要素を追加する対象を指定(デフォルトはdocument)して親要素のDOMオブジェクトを返す | DOMおやようそせってい
ボタン作成
| 関数 | ボタン作成 | LABELの | ラベルlabelを持つbutton要素を追加しDOMオブジェクトを返す | ぼたんさくせい
エディタ作成
| 関数 | エディタ作成 | TEXTの | textの値を持つテキストボックス(input[type='text'])の要素を追加しDOMオブジェクトを返す | えでぃたさくせい
テキストエリア作成
| 関数 | テキストエリア作成 | TEXTの | textの値を持つtextarea要素を追加しDOMオブジェクトを返す | てきすとえりあさくせい
ラベル作成
| 関数 | ラベル作成 | TEXTの | textの値を持つラベル(span要素)を追加しDOMオブジェクトを返す | らべるさくせい
改行作成
| 関数 | 改行作成 |  | 改行(br要素)を追加しDOMオブジェクトを返す | かいぎょうさくせい
チェックボックス作成
| 関数 | チェックボックス作成 | TEXTの | textのラベルを持つチェックボックス(input[type='checkbox'])要素を追加しDOMオブジェクトを返す | ちぇっくぼっくすさくせい
セレクトボックス作成
| 関数 | セレクトボックス作成 | OPTIONSの | 配列optionsの選択肢を持つselect要素を追加しDOMオブジェクトを返す | せれくとぼっくすさくせい
●HTML操作
HTML変換
| 関数 | HTML変換 | TEXTを | 文字列をHTMLに変換して返す | HTMLへんかん
●ローカルストレージ
保存
| 関数 | 保存 | VをKEYに/KEYへ | ブラウザのlocalStorageのキーKに文字列Vを保存 | ほぞん
開
| 関数 | 開 | KEYを/KEYから/KEYの | ブラウザのlocalStorageからVを読む | ひらく
存在
| 関数 | 存在 | KEYが | ブラウザのlocalStorageにKEYが存在しているか調べる | そんざい
ローカルストレージ保存
| 関数 | ローカルストレージ保存 | KEYにVを/KEYへ | ブラウザのlocalStorageのKにVを保存 | ろーかるすとれーじほぞん
ローカルストレージ読
| 関数 | ローカルストレージ読 | KEYを/KEYから/KEYの | ブラウザのlocalStorageからVを読む | ろーかるすとれーじよむ
ローカルストレージキー列挙
| 関数 | ローカルストレージキー列挙 |  | ブラウザのlocalStorageのキー一覧を返す | ろーかるすとれーじきーれっきょ
ローカルストレージキー削除
| 関数 | ローカルストレージキー削除 | KEYを/KEYの | ブラウザのlocalStorageのkeyを削除 | ろーかるすとれーじきーさくじょ
ローカルストレージ全削除
| 関数 | ローカルストレージ全削除 |  | ブラウザのlocalStorageのデータを全部削除する | ろーかるすとれーじぜんさくじょ
●描画
描画開始
| 関数 | 描画開始 | CVの/CVへ/CVで | 描画先にCanvas(文字列でクエリの指定も可)を指定して描画API(2D)の利用準備する | びょうがかいし
| 定数 | 描画中キャンバス | | null | びょうがちゅうきゃんばす |
線色設定
| 関数 | 線色設定 | Vに/Vへ | Canvasの線の描画色(lineStyle)を指定する | せんいろしてい
塗色設定
| 関数 | 塗色設定 | Vに/Vへ | Canvasへの描画色(fillStyle)を指定する | ぬりいろしてい
線描画
| 関数 | 線描画 | AからBへ/Bまで | [x1, y1]から[x2, y2]まで線を描画する | せんびょうが
線太設定
| 関数 | 線太設定 | Vに/Vへ | vに線の太さ設定 | せんふとさせってい
四角描画
| 関数 | 四角描画 | Bの/Bへ/Bに | [x, y, w, h]で矩形を描画する | しかくびょうが
描画クリア
| 関数 | 描画クリア | Bの/Bへ/Bに | [x, y, w, h]の範囲を描画クリア | びょうがくりあ
円描画
| 関数 | 円描画 | XYへRの/XYに | [x, y]へrの円を描画する | えんびょうが
楕円描画
| 関数 | 楕円描画 | ARGSへ/ARGSに/ARGSの | [x, y, x幅, y幅, 回転, 開始角, 終了角, 左回転か]に楕円を描画する | だえんびょうが
多角形描画
| 関数 | 多角形描画 | Aで/Aの/Aを | 座標配列vを指定して多角形を描画する | たかっけいびょうが
画像描画
| 関数 | 画像描画 | IMGのSXYのDXYへ/IMGをSXYをDXYに | ファイル名F(またはImage)の画像を[sx, sy, sw, sh]の[dx, dy, dw, dh]へ描画し、Imageを返す | がぞうびょうが
描画フォント設定
| 関数 | 描画フォント設定 | Nを/Nの/Nで/Nに | 描画フォントを指定する(CSSのフォント設定と同じ 例「36px Aria」) | びょうがふぉんとせってい
文字描画
| 関数 | 文字描画 | XYへSの/XYにSを | [x, y]へテキストSを描画する(描画フォント設定でサイズなど指定) | がぞうびょうが
●位置情報
位置情報取得時
| 関数 | 位置情報取得時 | FUNCの/FUNCに/FUNCへ | 位置情報を取得してコールバック関数内で変数「対象」に配列で[緯度,経度]を返す | いちじょうほうしゅとくしたとき
位置情報監視時
| 関数 | 位置情報監視時 | FUNCの/FUNCに/FUNCへ | 位置情報を監視してIDを返す。引数に指定したコールバック関数内で変数「対象」に配列で[緯度,経度]を返す | いちじょうほうかんししたとき
位置情報監視停止
| 関数 | 位置情報監視停止 | WIDの | 『位置情報監視時』で開始した監視を停止する | いちじょうほうかんしていし
●音声合成
話
| 関数 | 話 | Sと/Sを/Sの | 音声合成APIを使って、Sを発話する | はなす
話終時
| 関数 | 話終時 | CALLBACKでSと/Sを/Sの | 音声合成APIを使って、Sを発話し発話した後でcallbackを実行 | はなしおわったとき
話者一覧取得
| 関数 | 話者一覧取得 |  | 音声合成APIの話者一覧を得る | わしゃいちらんしゅとく
話者設定
| 関数 | 話者設定 | Vに/Vへ | 音声合成APIの話者を指定する | わしゃせってい
| 定数 | 話者速度 | | 1.0 | わしゃそくど |
| 定数 | 話者声高 | | 1.0 | わしゃこわだか |
| 定数 | 話者音量 | | 1.0 | わしゃこおんりょう |
話者詳細設定
| 関数 | 話者詳細設定 | OBJで/OBJに/OBJへ | 音声合成APIの話者の設定をオブジェクト形式で設定する。『速度,声高,ピッチ,音量』を指定 | わしゃしょうさいせってい
●WebSocket
WS接続完了時
| 関数 | WS接続完了時 | CALLBACKを | WebSocketでサーバに接続完了した時に実行されるイベントを指定 | WSせつぞくかんりょうしたとき
WS受信時
| 関数 | WS受信時 | CALLBACKを | WebSocketでサーバからメッセージを受信した時に実行されるイベントを指定 | WSじゅしんしたとき
WSエラー発生時
| 関数 | WSエラー発生時 | CALLBACKを | WebSocketでエラーが発生した時に実行されるイベントを指定 | WSえらーはっせいじ
WS接続
| 関数 | WS接続 | Sに/Sへ/Sの | WebSocketサーバsに接続する | WSせつぞく
WS送信
| 関数 | WS送信 | Sを/Sと | アクティブなWebSocketへsを送信する | WSそうしん
WS切断
| 関数 | WS切断 |  | アクティブなWebSocketを閉じる | WSせつだん
●オーディオ
オーディオ開
| 関数 | オーディオ開 | URLを/URLの | オーディオファイルのURLを指定して、オーディオを読み込み、Audioオブジェクトを返す | おーでぃおひらく
| 定数 | オーディオ再生位置 | | 0 | おーでぃおさいせいいち |
オーディオ再生
| 関数 | オーディオ再生 | OBJを | AudioオブジェクトOBJを指定してオーディをを再生 | おーでぃおさいせい
オーディオ停止
| 関数 | オーディオ停止 | OBJを | AudioオブジェクトOBJを指定してオーディを停止 | おーでぃおていし
オーディオ一時停止
| 関数 | オーディオ一時停止 | OBJを | AudioオブジェクトOBJを指定してオーディを一時停止 | おーでぃおていし
●ホットキー
ホットキー登録
| 関数 | ホットキー登録 | KEYにFNAMEを/KEYで | ホットキーKEYにEVENTを登録する | ほっときーとうろく
ホットキー解除
| 関数 | ホットキー解除 | KEYを/KEYの | ホットキーKEYを解除する | ほっときーかいじょ
●グラフ描画_CHARTJS
グラフ描画
| 関数 | グラフ描画 | DATAを/DATAで/DATAの | Chart.jsを利用して、DATAのグラフを描画 | ぐらふびょうが
| 定数 | グラフオプション | | {} | ぐらふおぷしょん |
線グラフ描画
| 関数 | 線グラフ描画 | DATAを/DATAで/DATAの | 線グラフを描画 | せんぐらふびょうが
棒グラフ描画
| 関数 | 棒グラフ描画 | DATAを/DATAで/DATAの | 棒グラフを描画 | ぼうぐらふびょうが
横棒グラフ描画
| 関数 | 横棒グラフ描画 | DATAを/DATAで/DATAの | 横棒グラフを描画 | よこぼうぐらふびょうが
円グラフ描画
| 関数 | 円グラフ描画 | DATAを/DATAで/DATAの | 円グラフを描画 | えんぐらふびょうが

■plugin_turtle
●タートルグラフィックス/カメ操作
カメ作成
| 関数 | カメ作成 |  | タートルグラフィックスを開始してカメのIDを返す | かめさくせい
ゾウ作成
| 関数 | ゾウ作成 |  | ゾウの画像でタートルグラフィックスを開始してIDを返す | ぞうさくせい
パンダ作成
| 関数 | パンダ作成 |  | パンダの画像でタートルグラフィックスを開始してIDを返す | ぱんださくせい
カメ操作対象設定
| 関数 | カメ操作対象設定 | IDに/IDへ/IDの | IDを指定して操作対象となるカメを変更する | かめそうさたいしょうせってい
| 変数 | カメ描画先 | | 'turtle_cv' | かめびょうがさき |
| 変数 | カメ画像URL | | turtleImage | かめがぞうURL |
カメ画像変更
| 関数 | カメ画像変更 | URLに/URLへ | カメの画像をURLに変更する | かめがぞうへんこう
| 定数 | カメ速度 | | 100 | かめそくど |
カメ速度設定
| 関数 | カメ速度設定 | Vに/Vへ | カメの動作速度vに設定(大きいほど遅い) | かめそくどせってい
カメ移動
| 関数 | カメ移動 | XYに/XYへ | カメの位置を[x,y]へ移動する | かめいどう
カメ起点移動
| 関数 | カメ起点移動 | XYに/XYへ | カメの描画起点位置を[x,y]へ移動する | かめきてんいどう
カメ進
| 関数 | カメ進 | Vだけ | カメの位置をVだけ進める | かめすすむ
カメ戻
| 関数 | カメ戻 | Vだけ | カメの位置をVだけ戻す | かめもどる
カメ角度設定
| 関数 | カメ角度設定 | Vに/Vへ/Vの | カメの向きをDEGに設定する | かめかくどせってい
カメ右回転
| 関数 | カメ右回転 | Vだけ | カメの向きをDEGだけ右に向ける | かめみぎかいてん
カメ左回転
| 関数 | カメ左回転 | Vだけ | カメの向きをDEGだけ左に向ける | かめひだりかいてん
カメペン色設定
| 関数 | カメペン色設定 | Cに/Cへ | カメのペン描画色をCに設定する | かめぺんいろせってい
カメペンサイズ設定
| 関数 | カメペンサイズ設定 | Wに/Wへ | カメペンのサイズをWに設定する | かめぺんさいずせってい
カメペン設定
| 関数 | カメペン設定 | Wに/Wへ | カメペンを使うかどうかをV(オン/オフ)に設定する | かめぺんせってい
カメ全消去
| 関数 | カメ全消去 |  | 表示しているカメと描画内容を全部消去する | かめぜんしょうきょ
カメ非表示
| 関数 | カメ非表示 |  | カメの画像を非表示にする。描画に影響しない。 | かめひひょうじ
カメ表示
| 関数 | カメ表示 |  | 非表示にしたカメを表示する。 | かめひょうじ
カメクリック時
| 関数 | カメクリック時 | FUNCを | 操作対象のカメをクリックした時のイベントを設定する | かめくりっくしたとき

■plugin_node
●ファイル入出力
開
| 関数 | 開 | Sを/Sから | ファイルSを開く | ひらく
読
| 関数 | 読 | Sを/Sから | ファイルSを開く | よむ
バイナリ読
| 関数 | バイナリ読 | Sを/Sから | ファイルSをバイナリ(Buffer)として開く | ばいなりよむ
保存
| 関数 | 保存 | SをFへ/Fに | データSをファイルFヘ書き込む | ほぞん
SJISファイル読
| 関数 | SJISファイル読 | Sを/Sから | SJIS形式のファイルSを読み込む | SJISふぁいるよむ
SJISファイル保存
| 関数 | SJISファイル保存 | SをFへ/Fに | SをSJIS形式でファイルFへ書き込む | SJISふぁいるほぞん
起動待機
| 関数 | 起動待機 | Sを | シェルコマンドSを起動し実行終了まで待機する | きどうたいき
起動
| 関数 | 起動 | Sを | シェルコマンドSを起動 | きどう
起動時
| 関数 | 起動時 | CALLBACKでSを | シェルコマンドSを起動 | きどうしたとき
ブラウザ起動
| 関数 | ブラウザ起動 | URLを | ブラウザでURLを起動 | ぶらうざきどう
ファイル列挙
| 関数 | ファイル列挙 | Sの/Sを/Sで | パスSのファイル名（フォルダ名）一覧を取得する。ワイルドカード可能。「*.jpg;*.png」など複数の拡張子を指定可能。 | ふぁいるれっきょ
全ファイル列挙
| 関数 | 全ファイル列挙 | Sの/Sを/Sで | パスS以下の全ファイル名を取得する。ワイルドカード可能。「*.jpg;*.png」のように複数の拡張子を指定可能。 | ぜんふぁいるれっきょ
存在
| 関数 | 存在 | PATHが/PATHの | ファイルPATHが存在するか確認して返す | そんざい
フォルダ存在
| 関数 | フォルダ存在 | PATHが/PATHの | ディレクトリPATHが存在するか確認して返す | ふぉるだそんざい
フォルダ作成
| 関数 | フォルダ作成 | PATHの/PATHを/PATHに/PATHへ | ディレクトリPATHを作成して返す(再帰的に作成) | ふぉるださくせい
ファイルコピー
| 関数 | ファイルコピー | AからBに/AをBへ | パスAをパスBへファイルコピーする | ふぁいるこぴー
ファイルコピー時
| 関数 | ファイルコピー時 | CALLBACKでAからBに/AをBへ | パスAをパスBへファイルコピーしてcallbackを実行 | ふぁいるこぴーしたとき
ファイル移動
| 関数 | ファイル移動 | AからBに/AをBへ | パスAをパスBへ移動する | ふぁいるいどう
ファイル移動時
| 関数 | ファイル移動時 | CALLBACKでAからBに/AをBへ | パスAをパスBへ移動してcallbackを実行 | ふぁいるいどうしたとき
ファイル削除
| 関数 | ファイル削除 | PATHの/PATHを | パスPATHを削除する | ふぁいるさくじょ
ファイル削除時
| 関数 | ファイル削除時 | CALLBACKでPATHの/PATHを | パスPATHを削除してcallbackを実行 | ふぁいるさくじょしたとき
ファイル情報取得
| 関数 | ファイル情報取得 | PATHの/PATHから | パスPATHの情報を調べてオブジェクトで返す | ふぁいるじょうほうしゅとく
ファイルサイズ取得
| 関数 | ファイルサイズ取得 | PATHの/PATHから | パスPATHのファイルサイズを調べて返す | ふぁいるさいずしゅとく
●パス操作
ファイル名抽出
| 関数 | ファイル名抽出 | Sから/Sの | フルパスのファイル名Sからファイル名部分を抽出して返す | ふぁいるめいちゅうしゅつ
パス抽出
| 関数 | パス抽出 | Sから/Sの | ファイル名Sからパス部分を抽出して返す | ぱすちゅうしゅつ
相対パス展開
| 関数 | 相対パス展開 | AをBで | ファイル名AからパスBを展開して返す | そうたいぱすてんかい
●フォルダ取得
カレントディレクトリ取得
| 関数 | カレントディレクトリ取得 |  | カレントディレクトリを返す | かれんとでぃれくとりしゅとく
カレントディレクトリ変更
| 関数 | カレントディレクトリ変更 | DIRに/DIRへ | カレントディレクトリをDIRに変更する | かれんとでぃれくとりへんこう
作業フォルダ取得
| 関数 | 作業フォルダ取得 |  | カレントディレクトリを返す | さぎょうふぉるだしゅとく
作業フォルダ変更
| 関数 | 作業フォルダ変更 | DIRに/DIRへ | カレントディレクトリをDIRに変更する | さぎょうふぉるだへんこう
ホームディレクトリ取得
| 関数 | ホームディレクトリ取得 |  | ホームディレクトリを取得して返す | ほーむでぃれくとりしゅとく
デスクトップ
| 関数 | デスクトップ |  | デスクトップパスを取得して返す | ですくとっぷ
マイドキュメント
| 関数 | マイドキュメント |  | マイドキュメントのパスを取得して返す | まいどきゅめんと
| 定数 | 母艦パス | | '' | ぼかんぱす |
母艦パス取得
| 関数 | 母艦パス取得 |  | スクリプトのあるディレクトリを返す | ぼかんぱすしゅとく
●環境変数
環境変数取得
| 関数 | 環境変数取得 | Sの | 環境変数Sを返す | かんきょうへんすうしゅとく
環境変数一覧取得
| 関数 | 環境変数一覧取得 |  | 環境変数の一覧を返す | かんきょうへんすういちらんしゅとく
●圧縮・解凍
圧縮解凍ツールパス変更
| 関数 | 圧縮解凍ツールパス変更 | Vに/Vへ | 圧縮解凍に使うツールを取得変更する | あっしゅくかいとうつーるぱすへんこう
解凍
| 関数 | 解凍 | AをBに/AからBへ | (v1非互換)ZIPファイルAをBに解凍(実行には7-zipが必要-https://goo.gl/LmKswH) | かいとう
解凍時
| 関数 | 解凍時 | CALLBACKでAをBに/AからBへ | 解凍処理を行い、処理が完了したときにcallback処理を実行 | かいとうしたとき
圧縮
| 関数 | 圧縮 | AをBに/AからBへ | (v1非互換)ファイルAをBにZIP圧縮(実行には7-zipが必要-https://goo.gl/LmKswH) | あっしゅく
圧縮時
| 関数 | 圧縮時 | CALLBACKでAをBに/AからBへ | 圧縮処理を行い完了したときにcallback処理を指定 | あっしゅくしたとき
●Nodeプロセス
終
| 関数 | 終 |  | Nodeでプログラム実行を強制終了する | おわる
終了
| 関数 | 終了 |  | Nodeでプログラム実行を強制終了する | しゅうりょう
秒待
| 関数 | 秒待 | SEC | NodeでN秒待つ | びょうまつ
OS取得
| 関数 | OS取得 |  | OSプラットフォームを返す(darwin/win32/linux) | OSしゅとく
OSアーキテクチャ取得
| 関数 | OSアーキテクチャ取得 |  | OSアーキテクチャを返す | OSあーきてくちゃしゅとく
●クリップボード操作
クリップボード
| 関数 | クリップボード | Vを | クリップボードを取得設定（『クリップボード＝値』で書換が可能） | くりっぷぼーど
●コマンドラインと標準入出力
| 定数 | コマンドライン | | '' | こまんどらいん |
| 定数 | ナデシコランタイム | | '' | なでしこらんたいむ |
| 定数 | ナデシコランタイムパス | | '' | なでしこらんたいむぱす |
標準入力取得時
| 関数 | 標準入力取得時 | CALLBACKを | 標準入力を一行取得した時に、無名関数（あるいは、文字列で関数名を指定）F(s)を実行する | ひょうじゅんにゅうりょくしゅとくしたとき
尋
| 関数 | 尋 | MSGと/MSGを | 標準入力を一行取得する | たずねる
●テスト
ASSERT等
| 関数 | ASSERT等 | AとBが | mochaによるテストで、ASSERTでAとBが正しいことを報告する | ASSERTひとしい
●ネットワーク
自分IPアドレス取得
| 関数 | 自分IPアドレス取得 |  | ネットワークアダプターからIPアドレス(IPv4)を取得して配列で返す | じぶんIPあどれすしゅとく
自分IPV6アドレス取得
| 関数 | 自分IPV6アドレス取得 |  | ネットワークアダプターからIPアドレス(IPv6)を取得して配列で返す | じぶんIPV6あどれすしゅとく
●Ajax
AJAX送信時
| 関数 | AJAX送信時 | CALLBACKのURLまで/URLへ/URLに | 非同期通信(Ajax)でURLにデータを送信し、成功するとcallbackが実行される。その際『対象』にデータが代入される。 | AJAXそうしんしたとき
GET送信時
| 関数 | GET送信時 | CALLBACKのURLまで/URLへ/URLに | 非同期通信(Ajax)でURLにデータを送信し、成功するとcallbackが実行される。その際『対象』にデータが代入される。 | GETそうしんしたとき
POST送信時
| 関数 | POST送信時 | CALLBACKのURLまでPARAMSを/URLへ/URLに | AjaxでURLにPARAMSをPOST送信し『対象』にデータを設定 | POSTそうしんしたとき
POSTフォーム送信時
| 関数 | POSTフォーム送信時 | CALLBACKのURLまでPARAMSを/URLへ/URLに | AjaxでURLにPARAMSをフォームとしてPOST送信し『対象』にデータを設定 | POSTふぉーむそうしんしたとき
AJAX失敗時
| 関数 | AJAX失敗時 | CALLBACKの | Ajax命令でエラーが起きたとき | AJAXえらーしっぱいしたとき
| 定数 | AJAXオプション | | '' | Ajax関連のオプションを指定 // @AJAXおぷしょん |
AJAXオプション設定
| 関数 | AJAXオプション設定 | OPTIONに/OPTIONへ/OPTIONと | Ajax命令でオプションを設定 | AJAXおぷしょんせってい
●文字コード
文字コード変換サポート判定
| 関数 | 文字コード変換サポート判定 | CODEの/CODEを | 文字コードCODEをサポートしているか確認 | もじこーどさぽーとはんてい
SJIS変換
| 関数 | SJIS変換 | STRに/STRへ/STRを | (v1非互換)文字列をShift_JISのバイナリバッファに変換 | SJISへんかん
SJIS取得
| 関数 | SJIS取得 | BUFから/BUFを/BUFで | Shift_JISのバイナリバッファを文字列に変換 | SJISしゅとく
エンコーディング変換
| 関数 | エンコーディング変換 | SをCODEへ/CODEで | 文字列SをCODEへ変換してバイナリバッファを返す | えんこーでぃんぐへんかん
エンコーディング取得
| 関数 | エンコーディング取得 | BUFをCODEから/CODEで | バイナリバッファBUFをCODEから変換して返す | えんこーでぃんぐしゅとく
●マウスとキーボード操作
キー送信
| 関数 | キー送信 | Sを/Sの | Sのキーを送信 | きーそうしん
窓アクティブ
| 関数 | 窓アクティブ | Sを/Sの | Sの窓をアクティブにする | まどあくてぃぶ

■plugin_express
●Webサーバ(Express)
| 定数 | GETデータ | | '' | WEBサーバクエリ |
| 定数 | POSTデータ | | '' | WEBサーバクエリ |
WEBサーバ名前設定
| 関数 | WEBサーバ名前設定 | NAMEに/NAMEへ | Webサーバの名前を変更する | WEBさーばなまえへんこう
WEBサーバ起動
| 関数 | WEBサーバ起動 | PORTNOの/PORTNOで | ポートPORTNOでWebサーバを起動して成功したら『WEBサーバ起動成功した時』を実行する | WEBさーばきどう
WEBサーバ起動時
| 関数 | WEBサーバ起動時 | CALLBACKをPORTNOの/PORTNOで | ポートPORTNOでWebサーバを起動して成功したらCALLBACKを実行する | WEBさーばきどうしたとき
WEBサーバ起動成功時
| 関数 | WEBサーバ起動成功時 | CALLBACKを | WEBサーバ起動が成功した時にcallbackを実行 | WEBさーばきどうせいこうしたとき
WEBサーバ起動失敗時
| 関数 | WEBサーバ起動失敗時 | CALLBACKを | WEBサーバ起動が失敗した時にcallbackを実行 | WEBさーばきどうしっぱいしたとき
WEBサーバ静的パス指定
| 関数 | WEBサーバ静的パス指定 | URLをPATHに/PATHへ | サーバのHTMLや画像などを配置する静的パスを指定する | WEBさーばせいてきぱすしてい
WEBサーバGET時
| 関数 | WEBサーバGET時 | CALLBACKをURIに/URIへ | URIにGETメソッドがあった時の処理を指定 | WEBさーばGETしたとき
WEBサーバPOST時
| 関数 | WEBサーバPOST時 | CALLBACKをURIに/URIへ | URIにPOSTメソッドがあった時の処理を指定 | WEBさーばPOSTしたとき
WEBサーバPUT時
| 関数 | WEBサーバPUT時 | CALLBACKをURIに/URIへ | URIにPOSTメソッドがあった時の処理を指定 | WEBさーばPUTしたとき
WEBサーバDELETE時
| 関数 | WEBサーバDELETE時 | CALLBACKをURIに/URIへ | URIにPOSTメソッドがあった時の処理を指定 | WEBさーばDELETEしたとき
WEBサーバヘッダ出力
| 関数 | WEBサーバヘッダ出力 | OBJを/OBJの | クライアントにヘッダOBJを出力 | WEBさーばへっだしゅつりょく
WEBサーバステータス出力
| 関数 | WEBサーバステータス出力 | NOを/NOの | クライアントにステータスNOを出力 | WEBさーばすてーたすしゅつりょく
WEBサーバ出力
| 関数 | WEBサーバ出力 | Sを/Sと | クライアントにSを出力 | WEBさーばしゅつりょく
WEBサーバリダイレクト
| 関数 | WEBサーバリダイレクト | URLへ/URLに | URLにリダイレクトする | WEBさーばりだいれくと

■plugin_markup
●マークアップ
マークダウンHTML変換
| 関数 | マークダウンHTML変換 | Sを | マークダウン形式で記述された文字列SをHTML形式に変換する | まーくだうんHTMLへんかん
HTML整形
| 関数 | HTML整形 | Sを | HTML形式で記述された文字列Sを整形する | HTMLせいけい

■plugin_math
●三角関数
SIN
| 関数 | SIN | Vの | ラジアン単位VのSINを求める | SIN
COS
| 関数 | COS | Vの | ラジアン単位VのCOSを求める | COS
TAN
| 関数 | TAN | Vの | ラジアン単位VのTANを求める | TAN
ARCSIN
| 関数 | ARCSIN | Vの | ラジアン単位VのARCSINを求める | ARCSIN
ARCCOS
| 関数 | ARCCOS | Vの | ラジアン単位VのARCCOSを求める | ARCCOS
ARCTAN
| 関数 | ARCTAN | Vの | ラジアン単位VのARCTANを求める | ARCTAN
RAD2DEG
| 関数 | RAD2DEG | Vを | ラジアンから度に変換 | RAD2DEG
DEG2RAD
| 関数 | DEG2RAD | Vを | 度からラジアンに変換 | DEG2RAD
度変換
| 関数 | 度変換 | Vを | ラジアンから度に変換 | どへんかん
ラジアン変換
| 関数 | ラジアン変換 | Vを | 度からラジアンに変換 | らじあんへんかん
●算術関数
SIGN
| 関数 | SIGN | Vの | Vが0なら0を、0超なら1を、0未満なら-1を返す | SIGN
符号
| 関数 | 符号 | Vの | Vが0なら0を、0超なら1を、0未満なら-1を返す | ふごう
ABS
| 関数 | ABS | Aの | Vの絶対値を返す | ABS
絶対値
| 関数 | 絶対値 | Aの | Vの絶対値を返す | ぜったいち
EXP
| 関数 | EXP | Aの | e（自然対数の底）の A 乗の値を返す | EXP
HYPOT
| 関数 | HYPOT | AとBの | 直角三角形の二辺の長さA,Bから斜辺を求めて返す。 | HYPOT
斜辺
| 関数 | 斜辺 | AとBの | 直角三角形の二辺の長さA,Bから斜辺を求めて返す。 | しゃへん
LN
| 関数 | LN | Aの | 実数式 A の自然対数（Ln(A) = 1）を返す | LN
LOG
| 関数 | LOG | Aの | Aの自然対数（底はE）を返す | LOG
LOGN
| 関数 | LOGN | AでBの | 指定された底AでBの対数を計算して返す | LOGN
FRAC
| 関数 | FRAC | Aの | 実数Aの小数部分を返す | FRAC
小数部分
| 関数 | 小数部分 | Aの | 実数Aの小数部分を返す | しょうすうぶぶん
整数部分
| 関数 | 整数部分 | Aの | 実数Aの整数部分を返す | せいすうぶぶん
乱数
| 関数 | 乱数 | Aの | 0から(A-1)までの乱数を返す | らんすう
SQRT
| 関数 | SQRT | Aの | Aの平方根を返す | SQRT
平方根
| 関数 | 平方根 | Aの | Aの平方根を返す | 平方根
●数値切上切捨丸め
ROUND
| 関数 | ROUND | Vを | 実数型の値Vを丸めてもっとも近い整数値を返す | ROUND
四捨五入
| 関数 | 四捨五入 | Vを/Vの | 実数型の値Vを丸めてもっとも近い整数値を返す | ししゃごにゅう
小数点切上
| 関数 | 小数点切上 | AをBで | 整数Aを小数点第B桁で切り上げして返す | しょうすうてんきりあげ
小数点切下
| 関数 | 小数点切下 | AをBで | 整数Aを小数点第B桁で切り下げして返す | しょうすうてんきりさげ
小数点四捨五入
| 関数 | 小数点四捨五入 | AをBで | 実数Aを小数点第B桁で四捨五入して返す | しょうすうてんししゃごにゅう
CEIL
| 関数 | CEIL | Vを | 数値を正の無限大方向へ切り上げて返す。 | CEIL
切上
| 関数 | 切上 | Vを | 数値を正の無限大方向へ切り上げて返す。 | きりあげ
FLOOR
| 関数 | FLOOR | Vを | 数値を負の無限大方向へ切り下げて返す。 | FLOOR
切捨
| 関数 | 切捨 | Vを | 数値を負の無限大方向へ切り下げて返す。 | きりすて

■plugin_csv
●CSV操作
CSV取得
| 関数 | CSV取得 | STRを/STRの/STRで | CSV形式のデータstrを強制的に二次元配列に変換して返す | CSVしゅとく
TSV取得
| 関数 | TSV取得 | STRを/STRの/STRで | TSV形式のデータstrを強制的に二次元配列に変換して返す | TSVしゅとく
表CSV変換
| 関数 | 表CSV変換 | Aを | 二次元配列AをCSV形式に変換して返す | ひょうCSVへんかん
表TSV変換
| 関数 | 表TSV変換 | Aを | 二次元配列AをTSV形式に変換して返す | ひょうTSVへんかん

■plugin_datetime
●日時処理
| 定数 | 元号データ | | require('./era.json') | げんごうでーた |
今
| 関数 | 今 |  | 現在時刻を「HH:mm:ss」の形式で返す | いま
システム時間
| 関数 | システム時間 |  | 現在のUNIX時間 (UTC(1970/1/1)からの経過秒数) を返す | しすてむじかん
今日
| 関数 | 今日 |  | 今日の日付を「YYYY/MM/DD」の形式で返す | きょう
明日
| 関数 | 明日 |  | 明日の日付を「YYYY/MM/DD」の形式で返す (v1非互換) | あす
昨日
| 関数 | 昨日 |  | 昨日の日付を「YYYY/MM/DD」の形式で返す (v1非互換) | きのう
今年
| 関数 | 今年 |  | 今年が何年かを西暦で返す | ことし
来年
| 関数 | 来年 |  | 来年が何年かを西暦で返す | らいねん
去年
| 関数 | 去年 |  | 去年が何年かを西暦で返す | きょねん
今月
| 関数 | 今月 |  | 今月が何月かを返す | こんげつ
来月
| 関数 | 来月 |  | 来月が何月かを返す | らいげつ
先月
| 関数 | 先月 |  | 先月が何月かを返す | せんげつ
曜日
| 関数 | 曜日 | Sの | 日付Sの曜日を返す | ようび
曜日番号取得
| 関数 | 曜日番号取得 | Sの | Sに指定した日付の曜日番号をで返す。不正な日付の場合は今日の曜日番号を返す。(0=日/1=月/2=火/3=水/4=木/5=金/6=土) | ようびばんごうしゅとく
UNIX時間変換
| 関数 | UNIX時間変換 | Sの/Sを/Sから | 日時SをUNIX時間 (UTC(1970/1/1)からの経過秒数) に変換して返す(v1非互換) | UNIXじかんへんかん
UNIXTIME変換
| 関数 | UNIXTIME変換 | Sの/Sを/Sから | 日時SをUNIX時間 (UTC(1970/1/1)からの経過秒数) に変換して返す | UNIXTIMEへんかん
日時変換
| 関数 | 日時変換 | TMを/TMから | UNIX時間 (UTC(1970/1/1)からの経過秒数) を「YYYY/MM/DD HH:mm:ss」の形式に変換 | にちじへんかん
和暦変換
| 関数 | 和暦変換 | Sを | Sを和暦に変換する。Sは明治以降の日付が有効。 | われきへんかん
年数差
| 関数 | 年数差 | AとBの/AからBまでの | 日付AとBの差を年数で求めて返す。A<Bなら正の数、そうでないなら負の数を返す (v1非互換)。 | ねんすうさ
月数差
| 関数 | 月数差 | AとBの/AからBまでの | 日付AとBの差を月数で求めて返す。A<Bなら正の数、そうでないなら負の数を返す (v1非互換)。 | げっすうさ
日数差
| 関数 | 日数差 | AとBの/AからBまでの | 日付AとBの差を日数で求めて返す。A<Bなら正の数、そうでないなら負の数を返す。 | にっすうさ
日時差
| 関数 | 日時差 | AとBのUNITによる/AからBまでの | 日時AとBの差を種類unitで返す。A<Bなら正の数、そうでないなら負の数を返す (v1非互換)。 | にちじさ
時間差
| 関数 | 時間差 | AとBの/AからBまでの | 時間AとBの時間の差を求めて返す。A<Bなら正の数、そうでないなら負の数を返す。 | じかんさ
分差
| 関数 | 分差 | AとBの/AからBまでの | 時間AとBの分数の差を求めて返す。A<Bなら正の数、そうでないなら負の数を返す。 | ふんさ
秒差
| 関数 | 秒差 | AとBの/AからBまでの | 時間AとBの差を秒差で求めて返す。A<Bなら正の数、そうでないなら負の数を返す。 | びょうさ
時間加算
| 関数 | 時間加算 | SにAを | 時間SにAを加えて返す。Aには「(+｜-)hh:nn:dd」で指定する。 | じかんかさん
日付加算
| 関数 | 日付加算 | SにAを | 日付SにAを加えて返す。Aには「(+｜-)yyyy/mm/dd」で指定する。 | ひづけかさん
日時加算
| 関数 | 日時加算 | SにAを | 日時SにAを加えて返す。Aは「(+｜-)1(年/ヶ月/日/時間/分/秒)」のように指定する (v1非互換)。 | にちじかさん

■plugin_caniuse
●ブラウザサポート
| 定数 | ブラウザ名変換表 | | require('caniuse-db/data.json').agents | ぶらうざめいへんかんひょう |
対応ブラウザ一覧取得
| 関数 | 対応ブラウザ一覧取得 |  | 対応しているブラウザの一覧を取得する | たいおうぶらうざいちらんしゅとく

■plugin_kansuji
●漢数字関連
漢数字
| 関数 | 漢数字 | INPUTを/INPUTの | 引数を数字と解釈して漢数字の文字列を返す | かんすうじ
算用数字
| 関数 | 算用数字 | INPUTを/INPUTの | U引数を漢数字と解釈して数値を返す | さんようすうじ

■plugin_weykturtle3d
●3Dタートルグラフィックス/カメ操作
T3Dカメ作成
| 関数 | T3Dカメ作成 |  | タートルグラフィックスを開始してカメのIDを返す | T3Dかめさくせい
T3Dカメ操作対象設定
| 関数 | T3Dカメ操作対象設定 | IDに/IDへ/IDの | IDを指定して操作対象となるカメを変更する | T3Dかめそうさたいしょうせってい
| 変数 | T3Dカメ描画先 | | 'turtle3d_div' | T3Dかめびょうがさき |
| 変数 | T3DカメモデルURL | | '' | T3DかめもでるURL |
T3Dカメモデル変更
| 関数 | T3Dカメモデル変更 | URLに/URLへ | カメのモデルをURLに変更する | T3Dかめもでるへんこう
| 定数 | T3Dカメ速度 | | 100 | T3Dかめそくど |
T3Dカメ速度設定
| 関数 | T3Dカメ速度設定 | Vに/Vへ | カメの動作速度vに設定(大きいほど遅い) | T3Dかめそくどせってい
T3Dカメ移動
| 関数 | T3Dカメ移動 | XYZに/XYZへ | カメの位置を[x,y,z]へ移動する | T3Dかめいどう
T3Dカメ原点設定
| 関数 | T3Dカメ原点設定 |  | カメの原点を現在の位置・向きに設定する | T3Dかめげんてんせってい
T3Dカメ原点移動
| 関数 | T3Dカメ原点移動 |  | カメを原点の位置・向きに移動する(描画はしない) | T3Dかめげんてんいどう
T3Dカメ起点移動
| 関数 | T3Dカメ起点移動 | XYZに/XYZへ | カメの描画起点位置を[x,y,z]へ移動する | T3Dかめきてんいどう
T3Dカメ進
| 関数 | T3Dカメ進 | Vだけ | カメの位置をVだけ進める | T3Dかめすすむ
T3Dカメ戻
| 関数 | T3Dカメ戻 | Vだけ | カメの位置をVだけ戻す | T3Dかめもどる
T3Dカメ上平行移動
| 関数 | T3Dカメ上平行移動 | Vだけ | カメの位置を上にVだけ進める | T3Dかめうえへいこういどう
T3Dカメ下平行移動
| 関数 | T3Dカメ下平行移動 | Vだけ | カメの位置を下にVだけ進める | T3Dかめしたへいこういどう
T3Dカメ左平行移動
| 関数 | T3Dカメ左平行移動 | Vだけ | カメの位置を左にVだけ進める | T3Dかめひだりへいこういどう
T3Dカメ右平行移動
| 関数 | T3Dカメ右平行移動 | Vだけ | カメの位置を右にVだけ進める | T3Dかめみぎへいこういどう
T3Dカメ動
| 関数 | T3Dカメ動 | DIRへVだけ/DIRに | カメの位置をDIRにVだけ進める | T3Dかめうごく
T3Dカメ角度設定
| 関数 | T3Dカメ角度設定 | Vに/Vへ/Vの | カメの向きをオイラー(XYZ)にて設定する | T3Dかめかくどせってい
T3Dカメ右回転
| 関数 | T3Dカメ右回転 | Vだけ | カメの向きをDEGだけ右に向ける | T3Dかめみぎかいてん
T3Dカメ左回転
| 関数 | T3Dカメ左回転 | Vだけ | カメの向きをDEGだけ左に向ける | T3Dかめひだりかいてん
T3Dカメ上回転
| 関数 | T3Dカメ上回転 | Vだけ | カメの向きをDEGだけ上に向ける | T3Dかめうえかいてん
T3Dカメ下回転
| 関数 | T3Dカメ下回転 | Vだけ | カメの向きをDEGだけ下に向ける | T3Dかめしたかいてん
T3Dカメ回転
| 関数 | T3Dカメ回転 | DIRへVだけ/DIRに | カメの向きをDEGだけDIRに向ける | T3Dかめかいてん
T3Dカメ右ロール
| 関数 | T3Dカメ右ロール | Vだけ | カメをDEGだけ右に傾ける | T3Dかめみぎろーる
T3Dカメ左ロール
| 関数 | T3Dカメ左ロール | Vだけ | カメのDEGだけ左に傾ける | T3Dかめひだりろーる
T3Dカメ傾
| 関数 | T3Dカメ傾 | DIRにVだけ/DIRへ | カメをDEGだけDIRに傾ける | T3Dかめかたむける
T3Dカメペン色設定
| 関数 | T3Dカメペン色設定 | Cに/Cへ | カメのペン描画色をCに設定する | T3Dかめぺんいろせってい
T3Dカメペンサイズ設定
| 関数 | T3Dカメペンサイズ設定 | Wに/Wへ | カメペンのサイズをWに設定する | T3Dかめぺんさいずせってい
T3Dカメペン設定
| 関数 | T3Dカメペン設定 | Wに/Wへ | カメペンを使うかどうかをV(オン/オフ)に設定する | T3Dかめぺんせってい
T3Dカメ全消去
| 関数 | T3Dカメ全消去 |  | 表示しているカメと描画内容を全部消去する | T3Dかめぜんしょうきょ
T3Dカメ非表示
| 関数 | T3Dカメ非表示 |  | カメのモデルを非表示にする。描画に影響しない。 | T3Dかめひひょうじ
T3Dカメ表示
| 関数 | T3Dカメ表示 |  | 非表示にしたカメのモデルを表示する。 | T3Dかめひょうじ
T3D視点カメ設定
| 関数 | T3D視点カメ設定 | Wに/Wへ | 指定したカメを視点として使用する | T3Dしてんかめせってい
●3Dタートルグラフィックス/基本機能
T3D描画
| 関数 | T3D描画 |  | 現在の状態を描画する | T3Dびょうが
T3D背景色設定
| 関数 | T3D背景色設定 | Cに/Cへ | canvasをクリアする際の背景色を設定する | T3Dはいけいしょくせってい
T3DJSON取得
| 関数 | T3DJSON取得 |  | 描画した線のJSON形式で取得する | T3DJSONしゅとく
●3Dタートルグラフィックス/ヘルパ機能
T3Dカメラヘルパ表示
| 関数 | T3Dカメラヘルパ表示 |  | カメラヘルパーを表示する | T3Dかめらへるぱひょうじ
T3Dカメラヘルパ非表示
| 関数 | T3Dカメラヘルパ非表示 |  | カメラヘルパーを非表示にする | T3Dかめらへるぱひひょうじ
T3D軸線ヘルパ表示
| 関数 | T3D軸線ヘルパ表示 |  | 座標軸ヘルパーを表示する | T3Dじくせんへるぱひょうじ
T3D軸線ヘルパ非表示
| 関数 | T3D軸線ヘルパ非表示 |  | 座標軸ヘルパーを非表示にする | T3Dじくせんへるぱひひょうじ

■plugin_sqlite3(拡張プラグイン)
●SQLite3
| 定数 | SQLITE3今挿入ID | | '?' | SQLITE3いまそうにゅうID |
SQLITE3開
| 関数 | SQLITE3開 | Sを/Sの | SQlite3のデータベースを開いて、データベースオブジェクトを返す | SQLITE3ひらく
SQLITE3閉
| 関数 | SQLITE3閉 |  | アクティブなSQlite3のデータベースを閉じる | SQLITE3とじる
SQLITE3切替
| 関数 | SQLITE3切替 | DBに/DBへ | アクティブなSQlite3のデータベースをDB(SQLITE3開くで開いたもの)に切り替える | SQLITE3きりかえる
SQLITE3実行後
| 関数 | SQLITE3実行後 | FにSQLをPARAMSで | SQLをパラメータPARAMSで実行する。完了するとコールバック関数Fを実行する。 | SQLITE3じっこうしたあと
SQLITE3取得後
| 関数 | SQLITE3取得後 | FにSQLをPARAMSで | SQLをパラメータPARAMSで取得実行する。完了するとコールバック関数Fが実行され、結果は第一引数に与えられる。 | SQLITE3じっこうしゅとくしたあと
SQLITE3逐次実行
| 関数 | SQLITE3逐次実行 | SQLをPARAMSで | 逐次実行構文にて、SQLとパラメータPARAMSでSQLを実行し、変数『対象』に結果を得る。 | SQLITE3ちくじじっこう
SQLITE3逐次全取得
| 関数 | SQLITE3逐次全取得 | SQLをPARAMSで | 逐次実行構文内で、SQLとパラメータPARAMSでSQLを実行して結果を得る。 | SQLITE3ちくじぜんしゅとく
SQLITE3逐次取得
| 関数 | SQLITE3逐次取得 | SQLをPARAMSで | 逐次実行構文内で、SQLとパラメータPARAMSでSQLを実行して結果を得る。 | SQLITE3ちくじしゅとく

■plugin_sqlite3sync(拡張プラグイン)
●SQLite3同期
SQLITE3開
| 関数 | SQLITE3開 | Fを/Fの | SQLite3のデータベースFを開いて、データベースオブジェクトを返す | SQLITE3ひらく
SQLITE3閉
| 関数 | SQLITE3閉 |  | アクティブなSQlite3のデータベースを閉じる | SQLITE3とじる
SQLITE3同期切替
| 関数 | SQLITE3同期切替 | DBに/DBへ | 操作対象のデータベースをDB(『SQLITE3同期開』を使用)に切り替える | SQLITE3どうききりかえる
SQLITE3実行
| 関数 | SQLITE3実行 | SQLをPARAMSで | SQLをパラメータPARAMSで実行する。 | SQLITE3じっこう
INSERT
| 関数 | INSERT | TBLにPARAMSを/TBLへ | INSERT文を実行。TBLへハッシュPARAMSを挿入。 | INSERT
SQLITE3挿入
| 関数 | SQLITE3挿入 | TBLにPARAMSを/TBLへ | INSERT文を実行。TBLへハッシュPARAMSを挿入。 | SQLITE3そうにゅう
UPDATE
| 関数 | UPDATE | TBLのWHEREをPARAMSに/PARAMSへ | UPDATE文を実行。TBLのWHEREをPARAMSに更新。 | UPDATE
SQLITE3更新
| 関数 | SQLITE3更新 | TBLのWHEREをPARAMSに/PARAMSへ | UPDATE文を実行。TBLのWHEREをPARAMSに更新。 | SQLITE3こうしん

■plugin_odbc(拡張プラグイン)
●ODBC
ODBC逐次開
| 関数 | ODBC逐次開 | Sを/Sの/Sで | 逐次実行構文にて、ODBCのデータベースを開く | ODBCちくじひらく
ODBC開
| 関数 | ODBC開 | Sを/Sの/Sで | ODBCのデータベースを同期的に開いてオブジェクトを返す | ODBCひらく
ODBC逐次実行
| 関数 | ODBC逐次実行 | SQLをPARAMSで | 逐次実行構文にて、SQLとパラメータPARAMSでSQLを実行し、変数『対象』に結果を得る。 | ODBCちくじじっこう
ODBC実行
| 関数 | ODBC実行 | SQLをPARAMSで | 逐次実行構文内で、SQLとパラメータPARAMSでSQLを実行して結果を得る。 | SQLITE3をしゅとく
ODBC閉
| 関数 | ODBC閉 |  | ODBCで開いているデータベースを閉じる | ODBCとじる
ODBC逐次閉
| 関数 | ODBC逐次閉 |  | 逐次実行構文でODBCで開いているデータベースを閉じる | ODBCちくじとじる
ODBCトランザクション開始
| 関数 | ODBCトランザクション開始 |  | ODBCでトランザクションを開始する | ODBCとらんざくしょんかいし
ODBCトランザクション終了
| 関数 | ODBCトランザクション終了 |  | ODBCでトランザクションを終了する | ODBCとらんざくしょんしゅうりょう

■plugin_mssql(拡張プラグイン)
●SQLServer
MSSQL逐次開
| 関数 | MSSQL逐次開 | Sを/Sの/Sで | 逐次実行構文にてデータベースを開く | MSSQLちくじひらく
MSSQL逐次実行
| 関数 | MSSQL逐次実行 | SQLをPARAMSで | 逐次実行構文にて、SQLとパラメータPARAMSでSQLを実行し、変数『対象』に結果を得る。 | MSSQLちくじじっこう
MSSQL逐次閉
| 関数 | MSSQL逐次閉 |  | 開いているデータベースを閉じる | MSSQLとじる

■plugin_mysql(拡張プラグイン)
●MySQL
MYSQL開
| 関数 | MYSQL開 | Sを/Sの/Sで | データベースを開く | MYSQLひらく
MYSQL閉
| 関数 | MYSQL閉 |  | データベースを閉じる | MYSQLとじる
MYSQL逐次実行
| 関数 | MYSQL逐次実行 | SQLをPARAMSで | 逐次実行構文にて、SQLとパラメータPARAMSでSQLを実行し、変数『対象』に結果を得る。INSERT句の場合は『対象[insertId]』でIDが得られる。 | MYSQLちくじじっこう

■plugin_postgresql(拡張プラグイン)
●PostgreSQL
PG開
| 関数 | PG開 | Sを/Sの/Sで | データベースを開く | PGひらく
PG閉
| 関数 | PG閉 |  | データベースを閉じる | PGとじる
PG逐次実行
| 関数 | PG逐次実行 | SQLをPARAMSで | 逐次実行構文にて、SQLとパラメータPARAMSでSQLを実行し、変数『対象』に結果を得る。SELECT句以外を実行した時も情報が『対象』に入る。 | PGちくじじっこう

■plugin_firebase(拡張プラグイン)
●Firebase
FIREBASE初期化
| 関数 | FIREBASE初期化 | CONFIGで | アカウント設定オブジェクトconfigを与えてFirebaseを初期化する | FIREBASEしょきか
FIREBASEパス参照
| 関数 | FIREBASEパス参照 | PATHを | データベースのパスPATHを参照 | FIREBASEぱすさんしょう
FIREBASE値設定
| 関数 | FIREBASE値設定 | PATHにVALUESを/PATHへVALUESの | データベースのパスPATHにオブジェクトVALUESを設定 | FIREBASEせっていs
FIREBASE値変更時
| 関数 | FIREBASE値変更時 | CALLBACKでPATHの | パスpathの値(オブジェクト)が変更された時callbackを実行。引数に値(オブジェクト)が得られる。 | FIREBASEへんこうしたとき
FIREBASE値取得時
| 関数 | FIREBASE値取得時 | CALLBACKでPATHの | パスpathの値を取得した時callbackを実行。引数に値(オブジェクト)が得られる。 | FIREBASEしゅとくしたとき

■plugin_googlehome(拡張プラグイン)
●GoogleHome
GoogleHome接続
| 関数 | GoogleHome接続 | NAMEへ/NAMEに/NAMEの | LAN内にある名前NAMEのGoogleHomeに接続する | GOOGLEHOMEせつぞく
GoogleHome言
| 関数 | GoogleHome言 | Sと/Sを | GoogleHomeにSと言わせる | GOOGLEHOMEいう
GoogleHome話
| 関数 | GoogleHome話 | Sと/Sを | GoogleHomeにSと言わせる | GOOGLEHOMEはなす
GoogleHome再生
| 関数 | GoogleHome再生 | Sを/Sで | GoogleHomeでMP3を再生する | GOOGLEHOMEさいせい

■plugin_websocket(拡張プラグイン)
●WebSocketサーバ
WSサーバ起動
| 関数 | WSサーバ起動 | PORTNOの/PORTNOで | ポートPORTNOでサーバを起動して成功したら『WSサーバ起動成功した時』を実行する | WSさーばきどう
WSSサーバ起動
| 関数 | WSSサーバ起動 | CONFの/CONFで | 設定CONF{cert:サーバ証明書,key:キーファイル,port:ポート番号}を指定してWSSサーバを起動して成功したら『WSサーバ起動成功した時』を実行する | WSSさーばきどう
WSサーバ起動成功時
| 関数 | WSサーバ起動成功時 | CALLBACKを | WSサーバ起動が成功した時にcallbackを実行 | WSさーばきどうせいこうしたとき
WSサーバ起動失敗時
| 関数 | WSサーバ起動失敗時 | CALLBACKを | WSサーバ起動が失敗した時にcallbackを実行 | WSさーばきどうしっぱいしたとき
WSサーバ接続時
| 関数 | WSサーバ接続時 | CALLBACKを | WSサーバにクライアントが接続してきた時callbackを実行。接続情報は、変数『対象』に入る | WSさーばせつぞくしたとき
WSサーバ受信時
| 関数 | WSサーバ受信時 | CALLBACKで | WSサーバでメッセージを受信した時に実行される。受信データは『対象』に代入される | WSさーばじゅしんしたとき
WSサーバ全送信
| 関数 | WSサーバ全送信 | Sを | WSサーバで全員にメッセージSを送信する | WSさーばぜんそうしん
WSクライアント一覧取得
| 関数 | WSクライアント一覧取得 | Sを | WSサーバに接続しているクライアントの一覧を返す | WSくらいあんといちらんしゅとく

■plugin_htmlparser(拡張プラグイン)
●HTMLパーサ(コンソール)
| 定数 | HTML応答ヘッダ | | '' | HTMLおうとうへっだ |
HTML逐次URL開
| 関数 | HTML逐次URL開 | URLを | 任意のURLを開いてパースする。 | HTMLちくじURLひらく
HTMLパース
| 関数 | HTMLパース | HTMLを | 任意のHTML文字列をパースする。 | HTMLぱーす
DOM要素取得
| 関数 | DOM要素取得 | Qを/Qの/Qから | パース済みHTMLからクエリQに該当するDOMを取得する | DOMようそしゅとく
DOM子要素検索
| 関数 | DOM子要素検索 | DOMのQを/DOMから | DOMの子要素Qを取得する | DOMこようそけんさく
DOM子要素全取得
| 関数 | DOM子要素全取得 | DOMの/DOMから | DOMの子要素を全部取得する | DOMこようそぜんしゅとく
DOM親要素取得
| 関数 | DOM親要素取得 | Qを/Qの/Qから | DOMの親要素を取得する | DOMおやようそしゅとく
DOM次要素取得
| 関数 | DOM次要素取得 | Qを/Qの/Qから | DOMの親要素を取得する | DOMおやようそしゅとく
DOM抽出
| 関数 | DOM抽出 | DOMからQを/DOMの | DOMからクエリQを利用して合致するものを抽出する | DOMちゅうしゅつ
属性取得
| 関数 | 属性取得 | DOMからKを/DOMの | DOMの属性Kを取得する | ぞくせいしゅとく
テキスト取得
| 関数 | テキスト取得 | DOMから/DOMの | DOMのテキストを取得する | てきすとしゅとく
HTML取得
| 関数 | HTML取得 | DOMから/DOMの | DOMのHTMLを取得する | HTMLしゅとく
HTML設定
| 関数 | HTML設定 | DOMにSを/DOMへ | DOMにSを設定する | HTML設定
プロパティ取得
| 関数 | プロパティ取得 | DOMからPROPを/DOMの | DOMのプロパティPROPを取得する | ぷろぱてぃしゅとく
値取得
| 関数 | 値取得 | DOMから/DOMの | DOMの値を取得する | あたいしゅとく
値設定
| 関数 | 値設定 | DOMにVを/DOMへ | DOMの値vを設定する | あたいせってい
スタイル取得
| 関数 | スタイル取得 | DOMからKを/DOMの | DOMのスタイルKを取得する | すたいるしゅとく
データ取得
| 関数 | データ取得 | DOMからKを/DOMの | DOMのデータkを取得する | でーたしゅとく
DOM配列変換
| 関数 | DOM配列変換 | DOMから/DOMを | DOMを配列に変換する | DOMはいれつへんかん
タグ名取得
| 関数 | タグ名取得 | DOMから/DOMの | DOMのタグ名を取得する | たぐめいしゅとく

■plugin_ml(拡張プラグイン)
●機械学習
SVM開
| 関数 | SVM開 | OPTIONで | 機械学習のアルゴリズムSVMをパラメータOPTIONで開く。 OPTION={type,kernel,gamma,cost} | SVMひらく
ランダムフォレスト開
| 関数 | ランダムフォレスト開 | OPTIONで | 機械学習のアルゴリズムRandom ForestをOPTIONで開く。OPTION={seed,maxFeatures,replacement=(true/false),nEstimators} | らんだむふぉれすとひらく
ランダムフォレスト回帰開
| 関数 | ランダムフォレスト回帰開 | PARAMSで | 機械学習のアルゴリズムRandom Forestの回帰をパラメータPARAMSで開く | らんだむふぉれすとかいきひらく
学習
| 関数 | 学習 | INPUTSとLABELSで | 入力配列inputsとラベル配列labelsで機械学習する | がくしゅう
予測
| 関数 | 予測 | INPUTSを/INPUTSで | 入力配列inputsで予測し機械学習の結果を配列で返す | よそく
アヤメデータ取得
| 関数 | アヤメデータ取得 |  | アヤメデータをJSON形式で取得して返す | あやめでーたしゅとく
モデル取得
| 関数 | モデル取得 |  | 現在学習済みのモデルを取得する | もでるしゅとく
モデル設定
| 関数 | モデル設定 | Mを/Mの | 現在学習済みのモデルMを設定する | もでるせってい
データランダム分割
| 関数 | データランダム分割 | DATAとLABELをRATEで | データとラベルの組をRATEで分割して{学習:{データ:[..],ラベル:[..]},テスト:{データ:[..],ラベル:[..]}}の形式で返す | でーたらんだむぶんかつ
正解率計算
| 関数 | 正解率計算 | TとPの/Pで | 配列T(正解)とP(予測)の正解率を計算して返す | せいかいりつけいさん
